{
 "name": "marble_client_app",
 "description": " ",
 "version": "1.0.0",
 "type": "flogo:app",
 "appModel": "1.0.0",
 "resources": [
  {
   "id": "flow:Create_Marble",
   "data": {
    "name": "Create Marble",
    "description": "Create a marble",
    "tasks": [
     {
      "id": "LogMessage",
      "name": "LogMessage",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Create Marble] {\", $flow.content.name, \", \", $flow.content.color, \", \", $flow.content.owner, \"}\")"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest",
      "name": "FabricRequest",
      "activity": {
       "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "6c785450-55a9-11e9-98c5-0fe3500cf4b8",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          },
          {
           "name": "orgName",
           "type": "string",
           "required": true,
           "display": {
            "name": "Client organization name",
            "description": "Name of the organization that created the client user",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "org1"
          },
          {
           "name": "userName",
           "type": "string",
           "description": "Name of the client user",
           "required": true,
           "display": {
            "name": "Client user name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "User1"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1554441210000,
         "user": "flogo",
         "connectorName": "local-first-network",
         "connectorDescription": " "
        },
        "requestType": "invoke",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "initMarble"
         },
         {
          "mapTo": "$INPUT['parameters']['name']",
          "type": "assign",
          "value": "$flow.content.name"
         },
         {
          "mapTo": "$INPUT['parameters']['color']",
          "type": "assign",
          "value": "$flow.content.color"
         },
         {
          "mapTo": "$INPUT['parameters']['size']",
          "type": "assign",
          "value": "$flow.content.size"
         },
         {
          "mapTo": "$INPUT['parameters']['owner']",
          "type": "assign",
          "value": "$flow.content.owner"
         },
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage1",
      "name": "LogMessage1",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric response: {\", $activity[FabricRequest].result.name, \", \", $activity[FabricRequest].result.color, \", \", $activity[FabricRequest].result.owner, \"}\")"
         }
        ]
       }
      }
     },
     {
      "id": "Return",
      "name": "Return",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']['name']",
          "type": "assign",
          "value": "$activity[FabricRequest].result.name"
         },
         {
          "mapTo": "$INPUT['returns']['data']['color']",
          "type": "assign",
          "value": "$activity[FabricRequest].result.color"
         },
         {
          "mapTo": "$INPUT['returns']['data']['size']",
          "type": "assign",
          "value": "$activity[FabricRequest].result.size"
         },
         {
          "mapTo": "$INPUT['returns']['data']['owner']",
          "type": "assign",
          "value": "$activity[FabricRequest].result.owner"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage2",
      "name": "LogMessage2",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric request error: \", $activity[FabricRequest].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError",
      "name": "ThrowError",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage",
      "to": "FabricRequest",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest",
      "to": "LogMessage1",
      "type": "expression",
      "value": "$activity[FabricRequest].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage1",
      "to": "Return",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest",
      "to": "LogMessage2",
      "type": "expression",
      "value": "$activity[FabricRequest].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage2",
      "to": "ThrowError",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "content",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}"
       }
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Get_Marble",
   "data": {
    "name": "Get Marble",
    "description": "fetch marble by name",
    "tasks": [
     {
      "id": "LogMessage3",
      "name": "LogMessage3",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Get Marble] \", $flow.name)"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest1",
      "name": "FabricRequest1",
      "activity": {
       "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "6c785450-55a9-11e9-98c5-0fe3500cf4b8",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          },
          {
           "name": "orgName",
           "type": "string",
           "required": true,
           "display": {
            "name": "Client organization name",
            "description": "Name of the organization that created the client user",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "org1"
          },
          {
           "name": "userName",
           "type": "string",
           "description": "Name of the client user",
           "required": true,
           "display": {
            "name": "Client user name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "User1"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1554441210000,
         "user": "flogo",
         "connectorName": "local-first-network",
         "connectorDescription": " "
        },
        "requestType": "query",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "readMarble"
         },
         {
          "mapTo": "$INPUT['parameters']['name']",
          "type": "assign",
          "value": "$flow.name"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage4",
      "name": "LogMessage4",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returns: {\", $activity[FabricRequest1].result.name, \", \", $activity[FabricRequest1].result.color, \", \", $activity[FabricRequest1].result.owner, \"}\")"
         }
        ]
       }
      }
     },
     {
      "id": "Return1",
      "name": "Return1",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest1].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']['name']",
          "type": "assign",
          "value": "$activity[FabricRequest1].result.name"
         },
         {
          "mapTo": "$INPUT['returns']['data']['color']",
          "type": "assign",
          "value": "$activity[FabricRequest1].result.color"
         },
         {
          "mapTo": "$INPUT['returns']['data']['size']",
          "type": "assign",
          "value": "$activity[FabricRequest1].result.size"
         },
         {
          "mapTo": "$INPUT['returns']['data']['owner']",
          "type": "assign",
          "value": "$activity[FabricRequest1].result.owner"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage5",
      "name": "LogMessage5",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest1].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError1",
      "name": "ThrowError1",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest1].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage3",
      "to": "FabricRequest1",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest1",
      "to": "LogMessage4",
      "type": "expression",
      "value": "$activity[FabricRequest1].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage4",
      "to": "Return1",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest1",
      "to": "LogMessage5",
      "type": "expression",
      "value": "$activity[FabricRequest1].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage5",
      "to": "ThrowError1",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "name",
       "type": "string"
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Query_By_Owner",
   "data": {
    "name": "Query By Owner",
    "description": "query marbles of an owner",
    "tasks": [
     {
      "id": "LogMessage6",
      "name": "LogMessage6",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Query By Owner] \", $flow.owner)"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest2",
      "name": "FabricRequest2",
      "activity": {
       "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "6c785450-55a9-11e9-98c5-0fe3500cf4b8",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          },
          {
           "name": "orgName",
           "type": "string",
           "required": true,
           "display": {
            "name": "Client organization name",
            "description": "Name of the organization that created the client user",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "org1"
          },
          {
           "name": "userName",
           "type": "string",
           "description": "Name of the client user",
           "required": true,
           "display": {
            "name": "Client user name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "User1"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1554441210000,
         "user": "flogo",
         "connectorName": "local-first-network",
         "connectorDescription": " "
        },
        "requestType": "query",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"owner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "queryMarblesByOwner"
         },
         {
          "mapTo": "$INPUT['parameters']['owner']",
          "type": "assign",
          "value": "$flow.owner"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage7",
      "name": "LogMessage7",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returns: \", $activity[FabricRequest2].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return2",
      "name": "Return2",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest2].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']",
          "type": "array",
          "value": "{\"to\":\"$INPUT['returns']['data']\",\"from\":\"$activity[FabricRequest2].result\",\"type\":\"foreach\",\"fields\":[{\"to\":\"$INPUT.$$['key']\",\"from\":\"$.key\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['name']\",\"from\":\"$.value.name\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['color']\",\"from\":\"$.value.color\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['size']\",\"from\":\"$.value.size\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['owner']\",\"from\":\"$.value.owner\",\"type\":\"assign\"}]}"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage8",
      "name": "LogMessage8",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest2].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError2",
      "name": "ThrowError2",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest2].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage6",
      "to": "FabricRequest2",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest2",
      "to": "LogMessage7",
      "type": "expression",
      "value": "$activity[FabricRequest2].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage7",
      "to": "Return2",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest2",
      "to": "LogMessage8",
      "type": "expression",
      "value": "$activity[FabricRequest2].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage8",
      "to": "ThrowError2",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "owner",
       "type": "string"
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Transfer_Marble",
   "data": {
    "name": "Transfer Marble",
    "description": "transfer marble to a new owner",
    "tasks": [
     {
      "id": "LogMessage9",
      "name": "LogMessage9",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Transfer Marble] \", $flow.content.name, \" new-owner: \", $flow.content.newOwner)"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest3",
      "name": "FabricRequest3",
      "activity": {
       "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "6c785450-55a9-11e9-98c5-0fe3500cf4b8",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          },
          {
           "name": "orgName",
           "type": "string",
           "required": true,
           "display": {
            "name": "Client organization name",
            "description": "Name of the organization that created the client user",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "org1"
          },
          {
           "name": "userName",
           "type": "string",
           "description": "Name of the client user",
           "required": true,
           "display": {
            "name": "Client user name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "User1"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1554441210000,
         "user": "flogo",
         "connectorName": "local-first-network",
         "connectorDescription": " "
        },
        "requestType": "invoke",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "transferMarble"
         },
         {
          "mapTo": "$INPUT['parameters']['name']",
          "type": "assign",
          "value": "$flow.content.name"
         },
         {
          "mapTo": "$INPUT['parameters']['newOwner']",
          "type": "assign",
          "value": "$flow.content.newOwner"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage10",
      "name": "LogMessage10",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: {\", $activity[FabricRequest3].result.name, \", \", $activity[FabricRequest3].result.color, \", \", $activity[FabricRequest3].result.owner, \"}\")"
         }
        ]
       }
      }
     },
     {
      "id": "Return3",
      "name": "Return3",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest3].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']['name']",
          "type": "assign",
          "value": "$activity[FabricRequest3].result.name"
         },
         {
          "mapTo": "$INPUT['returns']['data']['color']",
          "type": "assign",
          "value": "$activity[FabricRequest3].result.color"
         },
         {
          "mapTo": "$INPUT['returns']['data']['size']",
          "type": "assign",
          "value": "$activity[FabricRequest3].result.size"
         },
         {
          "mapTo": "$INPUT['returns']['data']['owner']",
          "type": "assign",
          "value": "$activity[FabricRequest3].result.owner"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage11",
      "name": "LogMessage11",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric errors: \", $activity[FabricRequest3].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError3",
      "name": "ThrowError3",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest3].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage9",
      "to": "FabricRequest3",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest3",
      "to": "LogMessage10",
      "type": "expression",
      "value": "$activity[FabricRequest3].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage10",
      "to": "Return3",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest3",
      "to": "LogMessage11",
      "type": "expression",
      "value": "$activity[FabricRequest3].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage11",
      "to": "ThrowError3",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "content",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"name\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}"
       }
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Query_By_Range",
   "data": {
    "name": "Query By Range",
    "description": "query marbles of key range, [startKey, endKey)",
    "tasks": [
     {
      "id": "LogMessage12",
      "name": "LogMessage12",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Query By Range] [\", $flow.startKey, \", \", $flow.endKey, \")\")"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest4",
      "name": "FabricRequest4",
      "activity": {
       "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "6c785450-55a9-11e9-98c5-0fe3500cf4b8",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          },
          {
           "name": "orgName",
           "type": "string",
           "required": true,
           "display": {
            "name": "Client organization name",
            "description": "Name of the organization that created the client user",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "org1"
          },
          {
           "name": "userName",
           "type": "string",
           "description": "Name of the client user",
           "required": true,
           "display": {
            "name": "Client user name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "User1"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1554441210000,
         "user": "flogo",
         "connectorName": "local-first-network",
         "connectorDescription": " "
        },
        "requestType": "query",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"startKey\":{\"type\":\"string\"},\"endKey\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "getMarblesByRange"
         },
         {
          "mapTo": "$INPUT['parameters']['startKey']",
          "type": "assign",
          "value": "$flow.startKey"
         },
         {
          "mapTo": "$INPUT['parameters']['endKey']",
          "type": "assign",
          "value": "$flow.endKey"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage13",
      "name": "LogMessage13",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: \", $activity[FabricRequest4].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return4",
      "name": "Return4",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest4].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']",
          "type": "array",
          "value": "{\"to\":\"$INPUT['returns']['data']\",\"from\":\"$activity[FabricRequest4].result\",\"type\":\"foreach\",\"fields\":[{\"to\":\"$INPUT.$$['key']\",\"from\":\"$.key\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['name']\",\"from\":\"$.value.name\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['color']\",\"from\":\"$.value.color\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['size']\",\"from\":\"$.value.size\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['owner']\",\"from\":\"$.value.owner\",\"type\":\"assign\"}]}"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage14",
      "name": "LogMessage14",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric errors: \", $activity[FabricRequest4].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError4",
      "name": "ThrowError4",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest4].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage12",
      "to": "FabricRequest4",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest4",
      "to": "LogMessage13",
      "type": "expression",
      "value": "$activity[FabricRequest4].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage13",
      "to": "Return4",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest4",
      "to": "LogMessage14",
      "type": "expression",
      "value": "$activity[FabricRequest4].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage14",
      "to": "ThrowError4",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "startKey",
       "type": "string"
      },
      {
       "name": "endKey",
       "type": "string"
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Transfer_By_Color",
   "data": {
    "name": "Transfer By Color",
    "description": "transfer all marbles of a color",
    "tasks": [
     {
      "id": "LogMessage15",
      "name": "LogMessage15",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Transfer By Color] \", $flow.content.color, \" new-owner: \", $flow.content.newOwner)"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest5",
      "name": "FabricRequest5",
      "activity": {
       "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "6c785450-55a9-11e9-98c5-0fe3500cf4b8",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgoKIwojIFNjaGVtYSB2ZXJzaW9uIG9mIHRoZSBjb250ZW50LiBVc2VkIGJ5IHRoZSBTREsgdG8gYXBwbHkgdGhlIGNvcnJlc3BvbmRpbmcgcGFyc2luZyBydWxlcy4KIwp2ZXJzaW9uOiAxLjAuMAoKIwojIFRoZSBjbGllbnQgc2VjdGlvbiB1c2VkIGJ5IEdPIFNESy4KIwpjbGllbnQ6CgogICMgV2hpY2ggb3JnYW5pemF0aW9uIGRvZXMgdGhpcyBhcHBsaWNhdGlvbiBpbnN0YW5jZSBiZWxvbmcgdG8/IFRoZSB2YWx1ZSBtdXN0IGJlIHRoZSBuYW1lIG9mIGFuIG9yZwogICMgZGVmaW5lZCB1bmRlciAib3JnYW5pemF0aW9ucyIKICBvcmdhbml6YXRpb246IG9yZzEKCiAgbG9nZ2luZzoKICAgIGxldmVsOiBpbmZvCgogICMgR2xvYmFsIGNvbmZpZ3VyYXRpb24gZm9yIHBlZXIsIGV2ZW50IHNlcnZpY2UgYW5kIG9yZGVyZXIgdGltZW91dHMKICAjIGlmIHRoaXMgdGhpcyBzZWN0aW9uIGlzIG9taXR0ZWQsIHRoZW4gZGVmYXVsdCB2YWx1ZXMgd2lsbCBiZSB1c2VkIChzYW1lIHZhbHVlcyBhcyBiZWxvdykKIyAgcGVlcjoKIyAgICB0aW1lb3V0OgojICAgICAgY29ubmVjdGlvbjogMTBzCiMgICAgICByZXNwb25zZTogMTgwcwojICAgICAgZGlzY292ZXJ5OgojICAgICAgICAjIEV4cGlyeSBwZXJpb2QgZm9yIGRpc2NvdmVyeSBzZXJ2aWNlIGdyZXlsaXN0IGZpbHRlcgojICAgICAgICAjIFRoZSBjaGFubmVsIGNsaWVudCB3aWxsIGdyZXlsaXN0IHBlZXJzIHRoYXQgYXJlIGZvdW5kIHRvIGJlIG9mZmxpbmUKIyAgICAgICAgIyB0byBwcmV2ZW50IHJlLXNlbGVjdGluZyB0aGVtIGluIHN1YnNlcXVlbnQgcmV0cmllcy4KIyAgICAgICAgIyBUaGlzIGludGVydmFsIHdpbGwgZGVmaW5lIGhvdyBsb25nIGEgcGVlciBpcyBncmV5bGlzdGVkCiMgICAgICAgIGdyZXlsaXN0RXhwaXJ5OiAxMHMKCiAgICAjIHRoZSBiZWxvdyB0aW1lb3V0cyBhcmUgY29tbWVudGVkIG91dCB0byB1c2UgdGhlIGRlZmF1bHQgdmFsdWVzIHRoYXQgYXJlIGZvdW5kIGluCiAgICAjICJwa2cvZmFiL2VuZHBvaW50Y29uZmlnLmdvIgogICAgIyB0aGUgY2xpZW50IGlzIGZyZWUgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgdmFsdWVzIGJ5IHVuY29tbWVudGluZyBhbmQgcmVzZXR0aW5nCiAgICAjIHRoZSB2YWx1ZXMgYXMgdGhleSBzZWUgZml0IGluIHRoZWlyIGNvbmZpZyBmaWxlCiMgICAgdGltZW91dDoKIyAgICAgIGNvbm5lY3Rpb246IDE1cwojICAgICAgcmVnaXN0cmF0aW9uUmVzcG9uc2U6IDE1cwojICBvcmRlcmVyOgojICAgIHRpbWVvdXQ6CiMgICAgICBjb25uZWN0aW9uOiAxNXMKIyAgICAgIHJlc3BvbnNlOiAxNXMKIyAgZ2xvYmFsOgojICAgIHRpbWVvdXQ6CiMgICAgICBxdWVyeTogMTgwcwojICAgICAgZXhlY3V0ZTogMTgwcwojICAgICAgcmVzbWdtdDogMTgwcwojICAgIGNhY2hlOgojICAgICAgY29ubmVjdGlvbklkbGU6IDMwcwojICAgICAgZXZlbnRTZXJ2aWNlSWRsZTogMm0KIyAgICAgIGNoYW5uZWxDb25maWc6IDMwbQojICAgICAgY2hhbm5lbE1lbWJlcnNoaXA6IDMwcwojICAgICAgZGlzY292ZXJ5OiAxMHMKIyAgICAgIHNlbGVjdGlvbjogMTBtCgogICMgUm9vdCBvZiB0aGUgTVNQIGRpcmVjdG9yaWVzIHdpdGgga2V5cyBhbmQgY2VydHMuCiAgY3J5cHRvY29uZmlnOgogICAgcGF0aDogJHtHT1BBVEh9L3NyYy9naXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy1zYW1wbGVzL2ZpcnN0LW5ldHdvcmsvY3J5cHRvLWNvbmZpZwoKICAjIFNvbWUgU0RLcyBzdXBwb3J0IHBsdWdnYWJsZSBLViBzdG9yZXMsIHRoZSBwcm9wZXJ0aWVzIHVuZGVyICJjcmVkZW50aWFsU3RvcmUiCiAgIyBhcmUgaW1wbGVtZW50YXRpb24gc3BlY2lmaWMKICBjcmVkZW50aWFsU3RvcmU6CiAgICAjIFtPcHRpb25hbF0uIFVzZWQgYnkgdXNlciBzdG9yZS4gTm90IG5lZWRlZCBpZiBhbGwgY3JlZGVudGlhbHMgYXJlIGVtYmVkZGVkIGluIGNvbmZpZ3VyYXRpb24KICAgICMgYW5kIGVucm9sbG1lbnRzIGFyZSBwZXJmb3JtZWQgZWxzd2hlcmUuCiAgICBwYXRoOiAiL3RtcC9zdGF0ZS1zdG9yZSIKCiAgICAjIFtPcHRpb25hbF0uIFNwZWNpZmljIHRvIHRoZSBDcnlwdG9TdWl0ZSBpbXBsZW1lbnRhdGlvbiB1c2VkIGJ5IEdPIFNESy4gU29mdHdhcmUtYmFzZWQgaW1wbGVtZW50YXRpb25zCiAgICAjIHJlcXVpcmluZyBhIGtleSBzdG9yZS4gUEtDUyMxMSBiYXNlZCBpbXBsZW1lbnRhdGlvbnMgZG9lcyBub3QuCiAgICBjcnlwdG9TdG9yZToKICAgICAgIyBTcGVjaWZpYyB0byB0aGUgdW5kZXJseWluZyBLZXlWYWx1ZVN0b3JlIHRoYXQgYmFja3MgdGhlIGNyeXB0byBrZXkgc3RvcmUuCiAgICAgIHBhdGg6IC90bXAvbXNwCgogICMgW09wdGlvbmFsXSBCQ0NTUCBjb25maWcgZm9yIHRoZSBjbGllbnQuIFVzZWQgYnkgR08gU0RLLgogIEJDQ1NQOgogICAgc2VjdXJpdHk6CiAgICAgZW5hYmxlZDogdHJ1ZQogICAgIGRlZmF1bHQ6CiAgICAgIHByb3ZpZGVyOiAiU1ciCiAgICAgaGFzaEFsZ29yaXRobTogIlNIQTIiCiAgICAgc29mdFZlcmlmeTogdHJ1ZQogICAgIGxldmVsOiAyNTYKCiAgdGxzQ2VydHM6CiAgICAjIFtPcHRpb25hbF0uIFVzZSBzeXN0ZW0gY2VydGlmaWNhdGUgcG9vbCB3aGVuIGNvbm5lY3RpbmcgdG8gcGVlcnMsIG9yZGVyZXJzIChmb3IgbmVnb3RpYXRpbmcgVExTKSBEZWZhdWx0OiBmYWxzZQogICAgc3lzdGVtQ2VydFBvb2w6IHRydWUKCiAgICAjIFtPcHRpb25hbF0uIENsaWVudCBrZXkgYW5kIGNlcnQgZm9yIFRMUyBoYW5kc2hha2Ugd2l0aCBwZWVycyBhbmQgb3JkZXJlcnMKICAgIGNsaWVudDoKICAgICAga2V5OgogICAgICAgIHBhdGg6ICR7R09QQVRIfS9zcmMvZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMtc2FtcGxlcy9maXJzdC1uZXR3b3JrL2NyeXB0by1jb25maWcvcGVlck9yZ2FuaXphdGlvbnMvb3JnMS5leGFtcGxlLmNvbS91c2Vycy9Vc2VyMUBvcmcxLmV4YW1wbGUuY29tL3Rscy9jbGllbnQua2V5CiAgICAgIGNlcnQ6CiAgICAgICAgcGF0aDogJHtHT1BBVEh9L3NyYy9naXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy1zYW1wbGVzL2ZpcnN0LW5ldHdvcmsvY3J5cHRvLWNvbmZpZy9wZWVyT3JnYW5pemF0aW9ucy9vcmcxLmV4YW1wbGUuY29tL3VzZXJzL1VzZXIxQG9yZzEuZXhhbXBsZS5jb20vdGxzL2NsaWVudC5jcnQKCiMKIyBbT3B0aW9uYWxdLiBCdXQgbW9zdCBhcHBzIHdvdWxkIGhhdmUgdGhpcyBzZWN0aW9uIHNvIHRoYXQgY2hhbm5lbCBvYmplY3RzIGNhbiBiZSBjb25zdHJ1Y3RlZAojIGJhc2VkIG9uIHRoZSBjb250ZW50IGJlbG93LiBJZiBhbiBhcHAgaXMgY3JlYXRpbmcgY2hhbm5lbHMsIHRoZW4gaXQgbGlrZWx5IHdpbGwgbm90IG5lZWQgdGhpcwojIHNlY3Rpb24uCiMKY2hhbm5lbHM6CgogICMgRGVmYXVsdCBjaGFubmVsIGlzIHVzZWQgaWYgY2hhbm5lbCBjb25maWd1cmF0aW9uIGlzIG1pc3Npbmcgb3IgaWYgZGVmaW5lZCBjaGFubmVsIGNvbmZpZ3VyYXRpb24gaXMgbWlzc2luZyBpbmZvCiAgIyBJZiBjaGFubmVsIGRvZXNuJ3QgZGVmaW5lIHBlZXJzIHRoZW4gcGVlcnMgZnJvbSBkZWZhdWx0IGNoYW5uZWwgd2lsbCBiZSB1c2VkCiAgIyBJZiBjaGFubmVsIGRvZXNuJ3QgZGVmaW5lIG9yZGVyZXMgdGhlbiBvcmRlcmVzIGZyb20gZGVmYXVsdCBjaGFubmVsIHdpbGwgYmUgdXNlZAogICMgSWYgY2hhbm5lbCBkb2Vzbid0IGRlZmluZSBwb2xpY2llcyB0aGVuIHBvbGljaWVzIGZyb20gZGVmYXVsdCBjaGFubmVsIHdpbGwgYmUgdXNlZC4KICAjIEFsc28sIGlmIGNoYW5uZWwgZGVmaW5lcyBwb2xpY2llcyBhbmQgc29tZSBwb2xpY3kgaW5mbyBpcyBtaXNzaW5nIHRoYW4gdGhhdCBtaXNzaW5nIGluZm8gd2lsbCBiZSBmaWxsZWQgZnJvbSBkZWZhdWx0IGNoYW5uZWwuCiAgX2RlZmF1bHQ6CgogICAgIyBbT3B0aW9uYWxdLiBsaXN0IG9mIHBlZXJzIGZyb20gcGFydGljaXBhdGluZyBvcmdzCiAgICBwZWVyczoKICAgICAgcGVlcjAub3JnMS5leGFtcGxlLmNvbToKICAgICAgICAjIFtPcHRpb25hbF0uIHdpbGwgdGhpcyBwZWVyIGJlIHNlbnQgdHJhbnNhY3Rpb24gcHJvcG9zYWxzIGZvciBlbmRvcnNlbWVudD8gVGhlIHBlZXIgbXVzdAogICAgICAgICMgaGF2ZSB0aGUgY2hhaW5jb2RlIGluc3RhbGxlZC4gVGhlIGFwcCBjYW4gYWxzbyB1c2UgdGhpcyBwcm9wZXJ0eSB0byBkZWNpZGUgd2hpY2ggcGVlcnMKICAgICAgICAjIHRvIHNlbmQgdGhlIGNoYWluY29kZSBpbnN0YWxsIHJlcXVlc3QuIERlZmF1bHQ6IHRydWUKICAgICAgICBlbmRvcnNpbmdQZWVyOiB0cnVlCgogICAgICAgICMgW09wdGlvbmFsXS4gd2lsbCB0aGlzIHBlZXIgYmUgc2VudCBxdWVyeSBwcm9wb3NhbHM/IFRoZSBwZWVyIG11c3QgaGF2ZSB0aGUgY2hhaW5jb2RlCiAgICAgICAgIyBpbnN0YWxsZWQuIFRoZSBhcHAgY2FuIGFsc28gdXNlIHRoaXMgcHJvcGVydHkgdG8gZGVjaWRlIHdoaWNoIHBlZXJzIHRvIHNlbmQgdGhlCiAgICAgICAgIyBjaGFpbmNvZGUgaW5zdGFsbCByZXF1ZXN0LiBEZWZhdWx0OiB0cnVlCiAgICAgICAgY2hhaW5jb2RlUXVlcnk6IHRydWUKCiAgICAgICAgIyBbT3B0aW9uYWxdLiB3aWxsIHRoaXMgcGVlciBiZSBzZW50IHF1ZXJ5IHByb3Bvc2FscyB0aGF0IGRvIG5vdCByZXF1aXJlIGNoYWluY29kZXMsIGxpa2UKICAgICAgICAjIHF1ZXJ5QmxvY2soKSwgcXVlcnlUcmFuc2FjdGlvbigpLCBldGMuIERlZmF1bHQ6IHRydWUKICAgICAgICBsZWRnZXJRdWVyeTogdHJ1ZQoKICAgICAgICAjIFtPcHRpb25hbF0uIHdpbGwgdGhpcyBwZWVyIGJlIHRoZSB0YXJnZXQgb2YgdGhlIFNESydzIGxpc3RlbmVyIHJlZ2lzdHJhdGlvbj8gQWxsIHBlZXJzIGNhbgogICAgICAgICMgcHJvZHVjZSBldmVudHMgYnV0IHRoZSBhcHAgdHlwaWNhbGx5IG9ubHkgbmVlZHMgdG8gY29ubmVjdCB0byBvbmUgdG8gbGlzdGVuIHRvIGV2ZW50cy4KICAgICAgICAjIERlZmF1bHQ6IHRydWUKICAgICAgICBldmVudFNvdXJjZTogdHJ1ZQoKICAgICMgW09wdGlvbmFsXS4gVGhlIGFwcGxpY2F0aW9uIGNhbiB1c2UgdGhlc2Ugb3B0aW9ucyB0byBwZXJmb3JtIGNoYW5uZWwgb3BlcmF0aW9ucyBsaWtlIHJldHJpZXZpbmcgY2hhbm5lbAogICAgIyBjb25maWcgZXRjLgogICAgcG9saWNpZXM6CiAgICAgICNbT3B0aW9uYWxdIG9wdGlvbnMgZm9yIHJldHJpZXZpbmcgZGlzY292ZXJ5IGluZm8KICAgICAgZGlzY292ZXJ5OgogICAgICAgICNbT3B0aW9uYWxdIGRpc2NvdmVyeSBpbmZvIHdpbGwgYmUgcmV0cmlldmVkIGZvciB0aGVzZSBudW1iZXIgb2YgcmFuZG9tIHRhcmdldHMKICAgICAgICBtYXhUYXJnZXRzOiAyCiAgICAgICAgI1tPcHRpb25hbF0gcmV0cnkgb3B0aW9ucyBmb3IgcmV0cml2aW5nIGRpc2NvdmVyeSBpbmZvCiAgICAgICAgcmV0cnlPcHRzOgogICAgICAgICAgI1tPcHRpb25hbF0gbnVtYmVyIG9mIHJldHJ5IGF0dGVtcHRzCiAgICAgICAgICBhdHRlbXB0czogNAogICAgICAgICAgI1tPcHRpb25hbF0gdGhlIGJhY2sgb2ZmIGludGVydmFsIGZvciB0aGUgZmlyc3QgcmV0cnkgYXR0ZW1wdAogICAgICAgICAgaW5pdGlhbEJhY2tvZmY6IDUwMG1zCiAgICAgICAgICAjW09wdGlvbmFsXSB0aGUgbWF4aW11bSBiYWNrIG9mZiBpbnRlcnZhbCBmb3IgYW55IHJldHJ5IGF0dGVtcHQKICAgICAgICAgIG1heEJhY2tvZmY6IDVzCiAgICAgICAgICAjW09wdGlvbmFsXSBoZSBmYWN0b3IgYnkgd2hpY2ggdGhlIGluaXRpYWwgYmFjayBvZmYgcGVyaW9kIGlzIGV4cG9uZW50aWFsbHkgaW5jcmVtZW50ZWQKICAgICAgICAgIGJhY2tvZmZGYWN0b3I6IDIuMAogICAgICAjW09wdGlvbmFsXSBvcHRpb25zIGZvciBzZWxlY3Rpb24gc2VydmljZQogICAgICBzZWxlY3Rpb246CiAgICAgICAgI1tPcHRpb25hbF0gZW5kb3JzZXIgc2VsZWN0aW9uIHNvcnRpbmcgc3RyYXRlZ3kuIFBvc3NpYmxlIHZhbHVlczogW0Jsb2NrSGVpZ2h0UHJpb3JpdHksQmFsYW5jZWRdCiAgICAgICAgU29ydGluZ1N0cmF0ZWd5OiBCbG9ja0hlaWdodFByaW9yaXR5CiAgICAgICAgI1tPcHRpb25hbF0gbG9hZC1iYWxhbmNlciB0eXBlLiBQb3NzaWJsZSB2YWx1ZXM6IFtSb3VuZFJvYmluLFJhbmRvbV0KICAgICAgICBCYWxhbmNlcjogUm91bmRSb2JpbgogICAgICAgICNbT3B0aW9uYWxdIHRoZSBudW1iZXIgb2YgYmxvY2tzIGZyb20gdGhlIGhpZ2hlc3QgYmxvY2sgbnVtYmVyIG9mIGEgZ3JvdXAgb2YgcGVlcnMgdGhhdCBhIHBlZXIKICAgICAgICAjY2FuIGxhZyBiZWhpbmQgYW5kIHN0aWxsIGJlIGNvbnNpZGVyZWQgdG8gYmUgdXAtdG8tZGF0ZS4gVGhlc2UgcGVlcnMgd2lsbCBiZSBzb3J0ZWQgdXNpbmcgdGhlCiAgICAgICAgI2dpdmVuIEJhbGFuY2VyLiBJZiBhIHBlZXIncyBibG9jayBoZWlnaHQgZmFsbHMgYmVoaW5kIHRoaXMgdGhyZXNob2xkIHRoZW4gaXQgd2lsbCBiZSBkZW1vdGVkCiAgICAgICAgI3RvIGEgbG93ZXIgcHJpb3JpdHkgbGlzdCBvZiBwZWVycyB3aGljaCB3aWxsIGJlIHNvcnRlZCBhY2NvcmRpbmcgdG8gYmxvY2sgaGVpZ2h0LgogICAgICAgICNOb3RlOiBUaGlzIHByb3BlcnR5IG9ubHkgYXBwbGllcyB0byBCbG9ja0hlaWdodFByaW9yaXR5IHNvcnRlci4KICAgICAgICBCbG9ja0hlaWdodExhZ1RocmVzaG9sZDogNQogICAgICAjW09wdGlvbmFsXSBvcHRpb25zIGZvciByZXRyaWV2aW5nIGNoYW5uZWwgY29uZmlndXJhdGlvbiBibG9ja3MKICAgICAgcXVlcnlDaGFubmVsQ29uZmlnOgogICAgICAgICNbT3B0aW9uYWxdIG1pbiBudW1iZXIgb2Ygc3VjY2VzcyByZXNwb25zZXMgKGZyb20gdGFyZ2V0cy9wZWVycykKICAgICAgICBtaW5SZXNwb25zZXM6IDEKICAgICAgICAjW09wdGlvbmFsXSBjaGFubmVsIGNvbmZpZyB3aWxsIGJlIHJldHJpZXZlZCBmb3IgdGhlc2UgbnVtYmVyIG9mIHJhbmRvbSB0YXJnZXRzCiAgICAgICAgbWF4VGFyZ2V0czogMQogICAgICAgICNbT3B0aW9uYWxdIHJldHJ5IG9wdGlvbnMgZm9yIHF1ZXJ5IGNvbmZpZyBibG9jawogICAgICAgIHJldHJ5T3B0czoKICAgICAgICAgICNbT3B0aW9uYWxdIG51bWJlciBvZiByZXRyeSBhdHRlbXB0cwogICAgICAgICAgYXR0ZW1wdHM6IDUKICAgICAgICAgICNbT3B0aW9uYWxdIHRoZSBiYWNrIG9mZiBpbnRlcnZhbCBmb3IgdGhlIGZpcnN0IHJldHJ5IGF0dGVtcHQKICAgICAgICAgIGluaXRpYWxCYWNrb2ZmOiA1MDBtcwogICAgICAgICAgI1tPcHRpb25hbF0gdGhlIG1heGltdW0gYmFjayBvZmYgaW50ZXJ2YWwgZm9yIGFueSByZXRyeSBhdHRlbXB0CiAgICAgICAgICBtYXhCYWNrb2ZmOiA1cwogICAgICAgICAgI1tPcHRpb25hbF0gaGUgZmFjdG9yIGJ5IHdoaWNoIHRoZSBpbml0aWFsIGJhY2sgb2ZmIHBlcmlvZCBpcyBleHBvbmVudGlhbGx5IGluY3JlbWVudGVkCiAgICAgICAgICBiYWNrb2ZmRmFjdG9yOiAyLjAKCiAgICAgICNbT3B0aW9uYWxdIG9wdGlvbnMgZm9yIHRoZSBldmVudCBzZXJ2aWNlCiAgICAgIGV2ZW50U2VydmljZToKICAgICAgICAjIFtPcHRpb25hbF0gcmVzb2x2ZXJTdHJhdGVneSBzcGVjaWZpZXMgdGhlIHBlZXIgcmVzb2x2ZXIgc3RyYXRlZ3kgdG8gdXNlIHdoZW4gY29ubmVjdGluZyB0byBhIHBlZXIKICAgICAgICAjIFBvc3NpYmxlIHZhbHVlczogW1ByZWZlck9yZyAoZGVmYXVsdCksIE1pbkJsb2NrSGVpZ2h0LCBCYWxhbmNlZF0KICAgICAgICAjCiAgICAgICAgIyBQcmVmZXJPcmc6CiAgICAgICAgIyAgIERldGVybWluZXMgd2hpY2ggcGVlcnMgYXJlIHN1aXRhYmxlIGJhc2VkIG9uIGJsb2NrIGhlaWdodCBsYWcgdGhyZXNob2xkLCBhbHRob3VnaCB3aWxsIHByZWZlciB0aGUgcGVlcnMgaW4gdGhlCiAgICAgICAgIyAgIGN1cnJlbnQgb3JnIChhcyBsb25nIGFzIHRoZWlyIGJsb2NrIGhlaWdodCBpcyBhYm92ZSBhIGNvbmZpZ3VyZWQgdGhyZXNob2xkKS4gSWYgbm9uZSBvZiB0aGUgcGVlcnMgZnJvbSB0aGUgY3VycmVudCBvcmcKICAgICAgICAjICAgYXJlIHN1aXRhYmxlIHRoZW4gYSBwZWVyIGZyb20gYW5vdGhlciBvcmcgaXMgY2hvc2VuLgogICAgICAgICMgTWluQmxvY2tIZWlnaHQ6CiAgICAgICAgIyAgIENob29zZXMgdGhlIGJlc3QgcGVlciBhY2NvcmRpbmcgdG8gYSBibG9jayBoZWlnaHQgbGFnIHRocmVzaG9sZC4gVGhlIG1heGltdW0gYmxvY2sgaGVpZ2h0IG9mIGFsbCBwZWVycyBpcwogICAgICAgICMgICBkZXRlcm1pbmVkIGFuZCB0aGUgcGVlcnMgd2hvc2UgYmxvY2sgaGVpZ2h0cyBhcmUgdW5kZXIgdGhlIG1heGltdW0gaGVpZ2h0IGJ1dCBhYm92ZSBhIHByb3ZpZGVkICJsYWciIHRocmVzaG9sZCBhcmUgbG9hZAogICAgICAgICMgICBiYWxhbmNlZC4gVGhlIG90aGVyIHBlZXJzIGFyZSBub3QgY29uc2lkZXJlZC4KICAgICAgICAjIEJhbGFuY2VkOgogICAgICAgICMgICBDaG9vc2VzIHBlZXJzIHVzaW5nIHRoZSBjb25maWd1cmVkIGJhbGFuY2VyLgogICAgICAgIHJlc29sdmVyU3RyYXRlZ3k6IFByZWZlck9yZwoKICAgICAgICAjIFtPcHRpb25hbF0gYmFsYW5jZXIgaXMgdGhlIGJhbGFuY2VyIHRvIHVzZSB3aGVuIGNob29zaW5nIGEgcGVlciB0byBjb25uZWN0IHRvCiAgICAgICAgIyBQb3NzaWJsZSB2YWx1ZXM6IFtSYW5kb20gKGRlZmF1bHQpLCBSb3VuZFJvYmluXQogICAgICAgIGJhbGFuY2VyOiBSb3VuZFJvYmluCgogICAgICAgICMgW09wdGlvbmFsXSBibG9ja0hlaWdodExhZ1RocmVzaG9sZCBzZXRzIHRoZSBibG9jayBoZWlnaHQgbGFnIHRocmVzaG9sZC4gVGhpcyB2YWx1ZSBpcyB1c2VkIGZvciBjaG9vc2luZyBhIHBlZXIKICAgICAgICAjIHRvIGNvbm5lY3QgdG8uIElmIGEgcGVlciBpcyBsYWdnaW5nIGJlaGluZCB0aGUgbW9zdCB1cC10by1kYXRlIHBlZXIgYnkgbW9yZSB0aGFuIHRoZSBnaXZlbiBudW1iZXIgb2YKICAgICAgICAjIGJsb2NrcyB0aGVuIGl0IHdpbGwgYmUgZXhjbHVkZWQgZnJvbSBzZWxlY3Rpb24uCiAgICAgICAgIyBOb3RlIHRoYXQgdGhpcyBwYXJhbWV0ZXIgaXMgYXBwbGljYWJsZSBvbmx5IHdoZW4gbWluQmxvY2tIZWlnaHRSZXNvbHZlck1vZGUgaXMgc2V0IHRvIFJlc29sdmVCeVRocmVzaG9sZC4KICAgICAgICAjIERlZmF1bHQ6IDUKICAgICAgICBibG9ja0hlaWdodExhZ1RocmVzaG9sZDogMgoKICAgICAgICAjIFtPcHRpb25hbF0gcmVjb25uZWN0QmxvY2tIZWlnaHRMYWdUaHJlc2hvbGQgLSB0aGUgZXZlbnQgY2xpZW50IHdpbGwgZGlzY29ubmVjdCBmcm9tIHRoZSBwZWVyIGlmIHRoZSBwZWVyJ3MKICAgICAgICAjIGJsb2NrIGhlaWdodCBmYWxscyBiZWhpbmQgdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgYmxvY2tzIGFuZCB3aWxsIHJlY29ubmVjdCB0byBhIGJldHRlciBwZXJmb3JtaW5nIHBlZXIuCiAgICAgICAgIyBOb3RlIHRoYXQgdGhpcyBwYXJhbWV0ZXIgaXMgb25seSBhcHBsaWNhYmxlIGlmIHBlZXJNb25pdG9yIGlzIHNldCB0byBFbmFibGVkIChkZWZhdWx0KS4KICAgICAgICAjIERlZmF1bHQ6IDEwCiAgICAgICAgIyBOT1RFUzoKICAgICAgICAjICAgLSBTZXR0aW5nIHRoaXMgdmFsdWUgdG9vIGxvdyBtYXkgY2F1c2UgdGhlIGV2ZW50IGNsaWVudCB0byBkaXNjb25uZWN0L3JlY29ubmVjdCB0b28gZnJlcXVlbnRseSwgdGhlcmVieQogICAgICAgICMgICAgIGFmZmVjdGluZyBwZXJmb3JtYW5jZS4KICAgICAgICByZWNvbm5lY3RCbG9ja0hlaWdodExhZ1RocmVzaG9sZDogNQoKICAgICAgICAjIFtPcHRpb25hbF0gcGVlck1vbml0b3JQZXJpb2QgaXMgdGhlIHBlcmlvZCBpbiB3aGljaCB0aGUgY29ubmVjdGVkIHBlZXIgaXMgbW9uaXRvcmVkIHRvIHNlZSBpZgogICAgICAgICMgdGhlIGV2ZW50IGNsaWVudCBzaG91bGQgZGlzY29ubmVjdCBmcm9tIGl0IGFuZCByZWNvbm5lY3QgdG8gYW5vdGhlciBwZWVyLgogICAgICAgICMgRGVmYXVsdDogMCAoZGlzYWJsZWQpIGZvciBCYWxhbmNlZCByZXNvbHZlclN0cmF0ZWd5OyA1cyBmb3IgUHJlZmVyT3JnIGFuZCBNaW5CbG9ja0hlaWdodCBzdHJhdGVneQogICAgICAgIHBlZXJNb25pdG9yUGVyaW9kOiAzcwoKICAjIE15Y2hhbm5lbCBvdmVycmlkZXMgaW5pdGlhbEJhY2tvZmYgZm9yIGRpc2NvdmVyeQogIG15Y2hhbm5lbDoKICAgIHBvbGljaWVzOgogICAgICBkaXNjb3Zlcnk6CiAgICAgICAgcmV0cnlPcHRzOgogICAgICAgICAgI1tSZXF1aXJlZCBmb3Igb3ZlcnJpZGVdIG51bWJlciBvZiByZXRyeSBhdHRlbXB0cwogICAgICAgICAgYXR0ZW1wdHM6IDQKICAgICAgICAgIGluaXRpYWxCYWNrb2ZmOiAxcwoKIyAgICBvcmRlcmVyczoKIyAgICAgIC0gb3JkZXJlci5leGFtcGxlLmNvbQoKICAgIHBlZXJzOgogICAgICBwZWVyMC5vcmcxLmV4YW1wbGUuY29tOgogICAgICAgIGVuZG9yc2luZ1BlZXI6IHRydWUKICAgICAgICBjaGFpbmNvZGVRdWVyeTogdHJ1ZQogICAgICAgIGxlZGdlclF1ZXJ5OiB0cnVlCiAgICAgICAgZXZlbnRTb3VyY2U6IHRydWUKCiAgICAgIHBlZXIxLm9yZzEuZXhhbXBsZS5jb206CiAgICAgICAgZW5kb3JzaW5nUGVlcjogdHJ1ZQogICAgICAgIGNoYWluY29kZVF1ZXJ5OiB0cnVlCiAgICAgICAgbGVkZ2VyUXVlcnk6IHRydWUKICAgICAgICBldmVudFNvdXJjZTogdHJ1ZQoKICAgICAgcGVlcjAub3JnMi5leGFtcGxlLmNvbToKICAgICAgICBlbmRvcnNpbmdQZWVyOiB0cnVlCiAgICAgICAgY2hhaW5jb2RlUXVlcnk6IHRydWUKICAgICAgICBsZWRnZXJRdWVyeTogdHJ1ZQogICAgICAgIGV2ZW50U291cmNlOiB0cnVlCgogICAgICBwZWVyMS5vcmcyLmV4YW1wbGUuY29tOgogICAgICAgIGVuZG9yc2luZ1BlZXI6IHRydWUKICAgICAgICBjaGFpbmNvZGVRdWVyeTogdHJ1ZQogICAgICAgIGxlZGdlclF1ZXJ5OiB0cnVlCiAgICAgICAgZXZlbnRTb3VyY2U6IHRydWUKCiMKIyBsaXN0IG9mIHBhcnRpY2lwYXRpbmcgb3JnYW5pemF0aW9ucyBpbiB0aGlzIG5ldHdvcmsKIwpvcmdhbml6YXRpb25zOgogIG9yZzE6CiAgICBtc3BpZDogT3JnMU1TUAoKICAgICMgVGhpcyBvcmcncyBNU1Agc3RvcmUgKGFic29sdXRlIHBhdGggb3IgcmVsYXRpdmUgdG8gY2xpZW50LmNyeXB0b2NvbmZpZykKICAgIGNyeXB0b1BhdGg6ICBwZWVyT3JnYW5pemF0aW9ucy9vcmcxLmV4YW1wbGUuY29tL3VzZXJzL3t1c2VybmFtZX1Ab3JnMS5leGFtcGxlLmNvbS9tc3AKCiAgICBwZWVyczoKICAgICAgLSBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIC0gcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgICMgW09wdGlvbmFsXS4gQ2VydGlmaWNhdGUgQXV0aG9yaXRpZXMgaXNzdWUgY2VydGlmaWNhdGVzIGZvciBpZGVudGlmaWNhdGlvbiBwdXJwb3NlcyBpbiBhIEZhYnJpYyBiYXNlZAogICAgIyBuZXR3b3JrLiBUeXBpY2FsbHkgY2VydGlmaWNhdGVzIHByb3Zpc2lvbmluZyBpcyBkb25lIGluIGEgc2VwYXJhdGUgcHJvY2VzcyBvdXRzaWRlIG9mIHRoZQogICAgIyBydW50aW1lIG5ldHdvcmsuIEZhYnJpYy1DQSBpcyBhIHNwZWNpYWwgY2VydGlmaWNhdGUgYXV0aG9yaXR5IHRoYXQgcHJvdmlkZXMgYSBSRVNUIEFQSXMgZm9yCiAgICAjIGR5bmFtaWMgY2VydGlmaWNhdGUgbWFuYWdlbWVudCAoZW5yb2xsLCByZXZva2UsIHJlLWVucm9sbCkuIFRoZSBmb2xsb3dpbmcgc2VjdGlvbiBpcyBvbmx5IGZvcgogICAgIyBGYWJyaWMtQ0Egc2VydmVycy4KICAgIGNlcnRpZmljYXRlQXV0aG9yaXRpZXM6CiAgICAgIC0gY2Eub3JnMS5leGFtcGxlLmNvbQoKICAjIHRoZSBwcm9maWxlIHdpbGwgY29udGFpbiBwdWJsaWMgaW5mb3JtYXRpb24gYWJvdXQgb3JnYW5pemF0aW9ucyBvdGhlciB0aGFuIHRoZSBvbmUgaXQgYmVsb25ncyB0by4KICAjIFRoZXNlIGFyZSBuZWNlc3NhcnkgaW5mb3JtYXRpb24gdG8gbWFrZSB0cmFuc2FjdGlvbiBsaWZlY3ljbGVzIHdvcmssIGluY2x1ZGluZyBNU1AgSURzIGFuZAogICMgcGVlcnMgd2l0aCBhIHB1YmxpYyBVUkwgdG8gc2VuZCB0cmFuc2FjdGlvbiBwcm9wb3NhbHMuIFRoZSBmaWxlIHdpbGwgbm90IGNvbnRhaW4gcHJpdmF0ZQogICMgaW5mb3JtYXRpb24gcmVzZXJ2ZWQgZm9yIG1lbWJlcnMgb2YgdGhlIG9yZ2FuaXphdGlvbiwgc3VjaCBhcyBhZG1pbiBrZXkgYW5kIGNlcnRpZmljYXRlLAogICMgZmFicmljLWNhIHJlZ2lzdHJhciBlbnJvbGwgSUQgYW5kIHNlY3JldCwgZXRjLgogIG9yZzI6CiAgICBtc3BpZDogT3JnMk1TUAoKICAgICMgVGhpcyBvcmcncyBNU1Agc3RvcmUgKGFic29sdXRlIHBhdGggb3IgcmVsYXRpdmUgdG8gY2xpZW50LmNyeXB0b2NvbmZpZykKICAgIGNyeXB0b1BhdGg6ICBwZWVyT3JnYW5pemF0aW9ucy9vcmcyLmV4YW1wbGUuY29tL3VzZXJzL3t1c2VybmFtZX1Ab3JnMi5leGFtcGxlLmNvbS9tc3AKCiAgICBwZWVyczoKICAgICAgLSBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIC0gcGVlcjEub3JnMi5leGFtcGxlLmNvbQoKICAgIGNlcnRpZmljYXRlQXV0aG9yaXRpZXM6CiAgICAgIC0gY2Eub3JnMi5leGFtcGxlLmNvbQoKICAjIE9yZGVyZXIgT3JnIG5hbWUKICBvcmRlcmVyb3JnOgogICAgICAjIE1lbWJlcnNoaXAgU2VydmljZSBQcm92aWRlciBJRCBmb3IgdGhpcyBvcmdhbml6YXRpb24KICAgICAgbXNwSUQ6IE9yZGVyZXJNU1AKCiAgICAgICMgTmVlZGVkIHRvIGxvYWQgdXNlcnMgY3J5cHRvIGtleXMgYW5kIGNlcnRzIGZvciB0aGlzIG9yZyAoYWJzb2x1dGUgcGF0aCBvciByZWxhdGl2ZSB0byBnbG9iYWwgY3J5cHRvIHBhdGgsIERFViBtb2RlKQogICAgICBjcnlwdG9QYXRoOiBvcmRlcmVyT3JnYW5pemF0aW9ucy9leGFtcGxlLmNvbS91c2Vycy97dXNlcm5hbWV9QGV4YW1wbGUuY29tL21zcAoKCiMKIyBMaXN0IG9mIG9yZGVyZXJzIHRvIHNlbmQgdHJhbnNhY3Rpb24gYW5kIGNoYW5uZWwgY3JlYXRlL3VwZGF0ZSByZXF1ZXN0cyB0by4gRm9yIHRoZSB0aW1lCiMgYmVpbmcgb25seSBvbmUgb3JkZXJlciBpcyBuZWVkZWQuIElmIG1vcmUgdGhhbiBvbmUgaXMgZGVmaW5lZCwgd2hpY2ggb25lIGdldCB1c2VkIGJ5IHRoZQojIFNESyBpcyBpbXBsZW1lbnRhdGlvbiBzcGVjaWZpYy4gQ29uc3VsdCBlYWNoIFNESydzIGRvY3VtZW50YXRpb24gZm9yIGl0cyBoYW5kbGluZyBvZiBvcmRlcmVycy4KIwpvcmRlcmVyczoKICBfZGVmYXVsdDoKICAgICMgY29tbW9uIG9yZGVyZXIgY29uZmlnIGl0ZW1zIGJldHdlZW4gYWxsIHRoZSBvcmRlcmVycyBpbiAgY29uZmlnCiAgICAjIHRoZXNlIGFyZSBzdGFuZGFyZCBwcm9wZXJ0aWVzIGRlZmluZWQgYnkgdGhlIGdSUEMgbGlicmFyeQogICAgIyB0aGV5IHdpbGwgYmUgcGFzc2VkIGluIGFzLWlzIHRvIGdSUEMgY2xpZW50IGNvbnN0cnVjdG9yCiAgICBncnBjT3B0aW9uczoKICAgICAgIyBUaGVzZSBwYXJhbWV0ZXJzIHNob3VsZCBiZSBzZXQgaW4gY29vcmRpbmF0aW9uIHdpdGggdGhlIGtlZXBhbGl2ZSBwb2xpY3kgb24gdGhlIHNlcnZlciwKICAgICAgIyBhcyBpbmNvbXBhdGlibGUgc2V0dGluZ3MgY2FuIHJlc3VsdCBpbiBjbG9zaW5nIG9mIGNvbm5lY3Rpb24uCiAgICAgICMgV2hlbiBkdXJhdGlvbiBvZiB0aGUgJ2tlZXAtYWxpdmUtdGltZScgaXMgc2V0IHRvIDAgb3IgbGVzcyB0aGUga2VlcCBhbGl2ZSBjbGllbnQgcGFyYW1ldGVycyBhcmUgZGlzYWJsZWQKICAgICAga2VlcC1hbGl2ZS10aW1lOiAwcwogICAgICBrZWVwLWFsaXZlLXRpbWVvdXQ6IDIwcwogICAgICBrZWVwLWFsaXZlLXBlcm1pdDogZmFsc2UKICAgICAgZmFpbC1mYXN0OiBmYWxzZQogICAgICAjIGFsbG93LWluc2VjdXJlIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uIGlmIGFkZHJlc3MgaGFzIG5vIHByb3RvY29sIGRlZmluZWQsIGlmIHRydWUgdGhlbiBncnBjIG9yIGVsc2UgZ3JwY3MKICAgICAgYWxsb3ctaW5zZWN1cmU6IGZhbHNlCgogIG9yZGVyZXIuZXhhbXBsZS5jb206CiAgICAjIFtPcHRpb25hbF0gRGVmYXVsdDogSW5mZXIgZnJvbSBob3N0bmFtZQogICAgdXJsOiBvcmRlcmVyLmV4YW1wbGUuY29tOjcwNTAKCiAgICAjIHRoZXNlIGFyZSBzdGFuZGFyZCBwcm9wZXJ0aWVzIGRlZmluZWQgYnkgdGhlIGdSUEMgbGlicmFyeQogICAgIyB0aGV5IHdpbGwgYmUgcGFzc2VkIGluIGFzLWlzIHRvIGdSUEMgY2xpZW50IGNvbnN0cnVjdG9yCiAgICBncnBjT3B0aW9uczoKICAgICAgI3NzbC10YXJnZXQtbmFtZS1vdmVycmlkZTogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICAjIFRoZXNlIHBhcmFtZXRlcnMgc2hvdWxkIGJlIHNldCBpbiBjb29yZGluYXRpb24gd2l0aCB0aGUga2VlcGFsaXZlIHBvbGljeSBvbiB0aGUgc2VydmVyLAogICAgICAjIGFzIGluY29tcGF0aWJsZSBzZXR0aW5ncyBjYW4gcmVzdWx0IGluIGNsb3Npbmcgb2YgY29ubmVjdGlvbi4KICAgICAgIyBXaGVuIGR1cmF0aW9uIG9mIHRoZSAna2VlcC1hbGl2ZS10aW1lJyBpcyBzZXQgdG8gMCBvciBsZXNzIHRoZSBrZWVwIGFsaXZlIGNsaWVudCBwYXJhbWV0ZXJzIGFyZSBkaXNhYmxlZAogICAgICAja2VlcC1hbGl2ZS10aW1lOiAwcwogICAgICAja2VlcC1hbGl2ZS10aW1lb3V0OiAyMHMKICAgICAgI2tlZXAtYWxpdmUtcGVybWl0OiBmYWxzZQogICAgICAjZmFpbC1mYXN0OiBmYWxzZQogICAgICAjIGFsbG93LWluc2VjdXJlIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uIGlmIGFkZHJlc3MgaGFzIG5vIHByb3RvY29sIGRlZmluZWQsIGlmIHRydWUgdGhlbiBncnBjIG9yIGVsc2UgZ3JwY3MKICAgICAgI2FsbG93LWluc2VjdXJlOiBmYWxzZQoKICAgIHRsc0NBQ2VydHM6CiAgICAgICMgQ2VydGlmaWNhdGUgbG9jYXRpb24gYWJzb2x1dGUgcGF0aAogICAgICBwYXRoOiAke0dPUEFUSH0vc3JjL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvZmlyc3QtbmV0d29yay9jcnlwdG8tY29uZmlnL29yZGVyZXJPcmdhbml6YXRpb25zL2V4YW1wbGUuY29tL3Rsc2NhL3Rsc2NhLmV4YW1wbGUuY29tLWNlcnQucGVtCgojCiMgTGlzdCBvZiBwZWVycyB0byBzZW5kIHZhcmlvdXMgcmVxdWVzdHMgdG8sIGluY2x1ZGluZyBlbmRvcnNlbWVudCwgcXVlcnkKIyBhbmQgZXZlbnQgbGlzdGVuZXIgcmVnaXN0cmF0aW9uLgojCnBlZXJzOgogIF9kZWZhdWx0OgogICAgI2NvbW1vbiBncnBjIG9wdGlvbnMgYmV0d2VlbiBhbGwgdGhlIHBlZXJzCiAgICBncnBjT3B0aW9uczoKICAgICAgIyBUaGVzZSBwYXJhbWV0ZXJzIHNob3VsZCBiZSBzZXQgaW4gY29vcmRpbmF0aW9uIHdpdGggdGhlIGtlZXBhbGl2ZSBwb2xpY3kgb24gdGhlIHNlcnZlciwKICAgICAgIyBhcyBpbmNvbXBhdGlibGUgc2V0dGluZ3MgY2FuIHJlc3VsdCBpbiBjbG9zaW5nIG9mIGNvbm5lY3Rpb24uCiAgICAgICMgV2hlbiBkdXJhdGlvbiBvZiB0aGUgJ2tlZXAtYWxpdmUtdGltZScgaXMgc2V0IHRvIDAgb3IgbGVzcyB0aGUga2VlcCBhbGl2ZSBjbGllbnQgcGFyYW1ldGVycyBhcmUgZGlzYWJsZWQKICAgICAga2VlcC1hbGl2ZS10aW1lOiAwcwogICAgICBrZWVwLWFsaXZlLXRpbWVvdXQ6IDIwcwogICAgICBrZWVwLWFsaXZlLXBlcm1pdDogZmFsc2UKICAgICAgZmFpbC1mYXN0OiBmYWxzZQogICAgICAjIGFsbG93LWluc2VjdXJlIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uIGlmIGFkZHJlc3MgaGFzIG5vIHByb3RvY29sIGRlZmluZWQsIGlmIHRydWUgdGhlbiBncnBjIG9yIGVsc2UgZ3JwY3MKICAgICAgYWxsb3ctaW5zZWN1cmU6IGZhbHNlCgogIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206CiAgICAjIHRoaXMgVVJMIGlzIHVzZWQgdG8gc2VuZCBlbmRvcnNlbWVudCBhbmQgcXVlcnkgcmVxdWVzdHMKICAgICMgW09wdGlvbmFsXSBEZWZhdWx0OiBJbmZlciBmcm9tIGhvc3RuYW1lCiAgICB1cmw6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb206NzA1MQoKICAgICNncnBjT3B0aW9uczoKICAgICMgIHNzbC10YXJnZXQtbmFtZS1vdmVycmlkZTogcGVlcjAub3JnMS5leGFtcGxlLmNvbQoKICAgIHRsc0NBQ2VydHM6CiAgICAgICMgQ2VydGlmaWNhdGUgbG9jYXRpb24gYWJzb2x1dGUgcGF0aAogICAgICBwYXRoOiAke0dPUEFUSH0vc3JjL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvZmlyc3QtbmV0d29yay9jcnlwdG8tY29uZmlnL3BlZXJPcmdhbml6YXRpb25zL29yZzEuZXhhbXBsZS5jb20vdGxzY2EvdGxzY2Eub3JnMS5leGFtcGxlLmNvbS1jZXJ0LnBlbQoKICBwZWVyMS5vcmcxLmV4YW1wbGUuY29tOgogICAgIyB0aGlzIFVSTCBpcyB1c2VkIHRvIHNlbmQgZW5kb3JzZW1lbnQgYW5kIHF1ZXJ5IHJlcXVlc3RzCiAgICB1cmw6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb206NzE1MQoKICAgICNncnBjT3B0aW9uczoKICAgICMgIHNzbC10YXJnZXQtbmFtZS1vdmVycmlkZTogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIHRsc0NBQ2VydHM6CiAgICAgICMgQ2VydGlmaWNhdGUgbG9jYXRpb24gYWJzb2x1dGUgcGF0aAogICAgICBwYXRoOiAke0dPUEFUSH0vc3JjL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvZmlyc3QtbmV0d29yay9jcnlwdG8tY29uZmlnL3BlZXJPcmdhbml6YXRpb25zL29yZzEuZXhhbXBsZS5jb20vdGxzY2EvdGxzY2Eub3JnMS5leGFtcGxlLmNvbS1jZXJ0LnBlbQoKICBwZWVyMC5vcmcyLmV4YW1wbGUuY29tOgogICAgdXJsOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tOjgwNTEKICAgICNncnBjT3B0aW9uczoKICAgICMgIHNzbC10YXJnZXQtbmFtZS1vdmVycmlkZTogcGVlcjAub3JnMi5leGFtcGxlLmNvbQoKICAgIHRsc0NBQ2VydHM6CiAgICAgIHBhdGg6ICR7R09QQVRIfS9zcmMvZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMtc2FtcGxlcy9maXJzdC1uZXR3b3JrL2NyeXB0by1jb25maWcvcGVlck9yZ2FuaXphdGlvbnMvb3JnMi5leGFtcGxlLmNvbS90bHNjYS90bHNjYS5vcmcyLmV4YW1wbGUuY29tLWNlcnQucGVtCgogIHBlZXIxLm9yZzIuZXhhbXBsZS5jb206CiAgICB1cmw6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb206OTA1MQogICAgI2dycGNPcHRpb25zOgogICAgIyAgc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgdGxzQ0FDZXJ0czoKICAgICAgcGF0aDogJHtHT1BBVEh9L3NyYy9naXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy1zYW1wbGVzL2ZpcnN0LW5ldHdvcmsvY3J5cHRvLWNvbmZpZy9wZWVyT3JnYW5pemF0aW9ucy9vcmcyLmV4YW1wbGUuY29tL3Rsc2NhL3Rsc2NhLm9yZzIuZXhhbXBsZS5jb20tY2VydC5wZW0KCiMKIyBGYWJyaWMtQ0EgaXMgYSBzcGVjaWFsIGtpbmQgb2YgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IHByb3ZpZGVkIGJ5IEh5cGVybGVkZ2VyIEZhYnJpYyB3aGljaCBhbGxvd3MKIyBjZXJ0aWZpY2F0ZSBtYW5hZ2VtZW50IHRvIGJlIGRvbmUgdmlhIFJFU1QgQVBJcy4gQXBwbGljYXRpb24gbWF5IGNob29zZSB0byB1c2UgYSBzdGFuZGFyZAojIENlcnRpZmljYXRlIEF1dGhvcml0eSBpbnN0ZWFkIG9mIEZhYnJpYy1DQSwgaW4gd2hpY2ggY2FzZSB0aGlzIHNlY3Rpb24gd291bGQgbm90IGJlIHNwZWNpZmllZC4KIwpjZXJ0aWZpY2F0ZUF1dGhvcml0aWVzOgogIGNhLm9yZzEuZXhhbXBsZS5jb206CiAgICAjIFtPcHRpb25hbF0gRGVmYXVsdDogSW5mZXIgZnJvbSBob3N0bmFtZQogICAgdXJsOiBodHRwczovL2NhLm9yZzEuZXhhbXBsZS5jb206NzA1NAogICAgIyBbT3B0aW9uYWxdIFRoZSBvcHRpb25hbCBzZXJ2ZXIgbmFtZSBmb3IgdGFyZ2V0IG92ZXJyaWRlCiAgICAjZ3JwY09wdGlvbnM6CiAgICAjICBzc2wtdGFyZ2V0LW5hbWUtb3ZlcnJpZGU6IGNhLm9yZzEuZXhhbXBsZS5jb20KICAgIHRsc0NBQ2VydHM6CiAgICAgICMgQ29tbWEtU2VwYXJhdGVkIGxpc3Qgb2YgcGF0aHMKICAgICAgcGF0aDogJHtHT1BBVEh9L3NyYy9naXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy1zYW1wbGVzL2ZpcnN0LW5ldHdvcmsvY3J5cHRvLWNvbmZpZy9wZWVyT3JnYW5pemF0aW9ucy9vcmcxLmV4YW1wbGUuY29tL3Rsc2NhL3Rsc2NhLm9yZzEuZXhhbXBsZS5jb20tY2VydC5wZW0KICAgICAgIyBDbGllbnQga2V5IGFuZCBjZXJ0IGZvciBTU0wgaGFuZHNoYWtlIHdpdGggRmFicmljIENBCiAgICAgIGNsaWVudDoKICAgICAgICBrZXk6CiAgICAgICAgICBwYXRoOiAke0dPUEFUSH0vc3JjL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvZmlyc3QtbmV0d29yay9jcnlwdG8tY29uZmlnL3BlZXJPcmdhbml6YXRpb25zL29yZzEuZXhhbXBsZS5jb20vdXNlcnMvVXNlcjFAb3JnMS5leGFtcGxlLmNvbS90bHMvY2xpZW50LmtleQogICAgICAgIGNlcnQ6CiAgICAgICAgICBwYXRoOiAke0dPUEFUSH0vc3JjL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvZmlyc3QtbmV0d29yay9jcnlwdG8tY29uZmlnL3BlZXJPcmdhbml6YXRpb25zL29yZzEuZXhhbXBsZS5jb20vdXNlcnMvVXNlcjFAb3JnMS5leGFtcGxlLmNvbS90bHMvY2xpZW50LmNydAoKICAgICMgRmFicmljLUNBIHN1cHBvcnRzIGR5bmFtaWMgdXNlciBlbnJvbGxtZW50IHZpYSBSRVNUIEFQSXMuIEEgInJvb3QiIHVzZXIsIGEuay5hIHJlZ2lzdHJhciwgaXMKICAgICMgbmVlZGVkIHRvIGVucm9sbCBhbmQgaW52b2tlIG5ldyB1c2Vycy4KICAgIHJlZ2lzdHJhcjoKICAgICAgZW5yb2xsSWQ6IGFkbWluCiAgICAgIGVucm9sbFNlY3JldDogYWRtaW5wdwogICAgIyBbT3B0aW9uYWxdIFRoZSBvcHRpb25hbCBuYW1lIG9mIHRoZSBDQS4KICAgIGNhTmFtZTogY2Eub3JnMS5leGFtcGxlLmNvbQogIGNhLm9yZzIuZXhhbXBsZS5jb206CiAgICB1cmw6IGh0dHBzOi8vY2Eub3JnMi5leGFtcGxlLmNvbTo4MDU0CiAgICAjIFtPcHRpb25hbF0gVGhlIG9wdGlvbmFsIHNlcnZlciBuYW1lIGZvciB0YXJnZXQgb3ZlcnJpZGUKICAgICNncnBjT3B0aW9uczoKICAgICMgIHNzbC10YXJnZXQtbmFtZS1vdmVycmlkZTogY2Eub3JnMi5leGFtcGxlLmNvbQogICAgdGxzQ0FDZXJ0czoKICAgICAgIyBDb21tYS1TZXBhcmF0ZWQgbGlzdCBvZiBwYXRocwogICAgICBwYXRoOiAke0dPUEFUSH0vc3JjL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvZmlyc3QtbmV0d29yay9jcnlwdG8tY29uZmlnL3BlZXJPcmdhbml6YXRpb25zL29yZzIuZXhhbXBsZS5jb20vdGxzY2EvdGxzY2Eub3JnMi5leGFtcGxlLmNvbS1jZXJ0LnBlbQogICAgICAjIENsaWVudCBrZXkgYW5kIGNlcnQgZm9yIFNTTCBoYW5kc2hha2Ugd2l0aCBGYWJyaWMgQ0EKICAgICAgY2xpZW50OgogICAgICAgIGtleToKICAgICAgICAgIHBhdGg6ICR7R09QQVRIfS9zcmMvZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMtc2FtcGxlcy9maXJzdC1uZXR3b3JrL2NyeXB0by1jb25maWcvcGVlck9yZ2FuaXphdGlvbnMvb3JnMi5leGFtcGxlLmNvbS91c2Vycy9Vc2VyMUBvcmcyLmV4YW1wbGUuY29tL3Rscy9jbGllbnQua2V5CiAgICAgICAgY2VydDoKICAgICAgICAgIHBhdGg6ICR7R09QQVRIfS9zcmMvZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMtc2FtcGxlcy9maXJzdC1uZXR3b3JrL2NyeXB0by1jb25maWcvcGVlck9yZ2FuaXphdGlvbnMvb3JnMi5leGFtcGxlLmNvbS91c2Vycy9Vc2VyMUBvcmcyLmV4YW1wbGUuY29tL3Rscy9jbGllbnQuY3J0CgogICAgICMgRmFicmljLUNBIHN1cHBvcnRzIGR5bmFtaWMgdXNlciBlbnJvbGxtZW50IHZpYSBSRVNUIEFQSXMuIEEgInJvb3QiIHVzZXIsIGEuay5hIHJlZ2lzdHJhciwgaXMKICAgICAjIG5lZWRlZCB0byBlbnJvbGwgYW5kIGludm9rZSBuZXcgdXNlcnMuCiAgICByZWdpc3RyYXI6CiAgICAgIGVucm9sbElkOiBhZG1pbgogICAgICBlbnJvbGxTZWNyZXQ6IGFkbWlucHcKICAgICMgW09wdGlvbmFsXSBUaGUgb3B0aW9uYWwgbmFtZSBvZiB0aGUgQ0EuCiAgICBjYU5hbWU6IGNhLm9yZzIuZXhhbXBsZS5jb20KCiMgRW50aXR5TWF0Y2hlcnMgZW5hYmxlIHN1YnN0aXR1dGlvbiBvZiBuZXR3b3JrIGhvc3RuYW1lcyB3aXRoIHN0YXRpYyBjb25maWd1cmF0aW9ucwogIyBzbyB0aGF0IHByb3BlcnRpZXMgY2FuIGJlIG1hcHBlZC4gUmVnZXggY2FuIGJlIHVzZWQgZm9yIHRoaXMgcHVycG9zZQojIFVybFN1YnN0aXR1dGlvbkV4cCBjYW4gYmUgZW1wdHkgd2hpY2ggbWVhbnMgdGhlIHNhbWUgbmV0d29yayBob3N0bmFtZSB3aWxsIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGdpdmVuIHNhbWUgYXMgbWFwcGVkIHBlZXIgdXJsLCBzbyB0aGF0IG1hcHBlZCBwZWVyIHVybCBjYW4gYmUgdXNlZAojIFVybFN1YnN0aXR1dGlvbkV4cCBjYW4gaGF2ZSBnb2xhbmcgcmVnZXggbWF0Y2hlcnMgbGlrZSAkezF9LmxvY2FsLmV4YW1wbGUuJHsyfTokezN9IGZvciBwYXR0ZXJuCiAjIGxpa2UgcGVlcjAub3JnMS5leGFtcGxlLmNvbToxMjM0IHdoaWNoIGNvbnZlcnRzIHBlZXIwLm9yZzEuZXhhbXBsZS5jb20gdG8gcGVlcjAub3JnMS5sb2NhbC5leGFtcGxlLmNvbToxMjM0CiMgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHAgZm9sbG93IGluIHRoZSBzYW1lIGxpbmVzIGFzCiAjIFN1YnN0aXR1dGlvbkV4cCBmb3IgdGhlIGZpZWxkcyBncHJjT3B0aW9ucy5zc2wtdGFyZ2V0LW5hbWUtb3ZlcnJpZGUgcmVzcGVjdGl2ZWx5CiMgSW4gYW55IGNhc2UgbWFwcGVkSG9zdCdzIGNvbmZpZyB3aWxsIGJlIHVzZWQsIHNvIG1hcHBlZCBob3N0IGNhbm5vdCBiZSBlbXB0eSwgaWYgZW50aXR5TWF0Y2hlcnMgYXJlIHVzZWQKI2VudGl0eU1hdGNoZXJzOgojZW50aXR5TWF0Y2hlcnM6CiMgIHBlZXI6CiMgICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuY29tOihcZCspCiMgICAgICB1cmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMS5leGFtcGxlLmNvbTokezJ9CiMgICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiMgICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiMKIyAgICAtIHBhdHRlcm46IChcdyspLm9yZzIuZXhhbXBsZS5jb206KFxkKykKIyAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcyLmV4YW1wbGUuY29tOiR7Mn0KIyAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KIyAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiMgICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3KykKIyAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbTo3MDUxCiMgICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQojICAgICAgbWFwcGVkSG9zdDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQojCiMgICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKIyAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMi5leGFtcGxlLmNvbTo4MDUxCiMgICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMi5leGFtcGxlLmNvbQojICAgICAgbWFwcGVkSG9zdDogcGVlcjAub3JnMi5leGFtcGxlLmNvbQojCiMgICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlMS4oXHcrKTooXGQrKQojICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiAkezF9Lm9yZzEuZXhhbXBsZS4kezJ9OiR7M30KIyAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiAkezF9Lm9yZzEuZXhhbXBsZS4kezJ9CiMgICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiMKIyAgICAtIHBhdHRlcm46IChcdyspLm9yZzEuZXhhbXBsZS4oXHcrKTooXGQrKQojICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tOjcwNTEKIyAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiMgICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiMKIyAgb3JkZXJlcjoKIyAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKIyAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbTo3MDUwCiMgICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQojICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQojCiMgICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlMi4oXHcrKQojICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAojICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdAojICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQojCiMgICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlMy4oXHcrKQojICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOgojICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6CiMgICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCiMKIyAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGU0LihcdyspOihcZCspCiMgICAgICB1cmxTdWJzdGl0dXRpb25FeHA6ICR7MX0uZXhhbXBsZS4kezJ9OiR7M30KIyAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiAkezF9LmV4YW1wbGUuJHsyfQojICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQojCiMgIGNlcnRpZmljYXRlQXV0aG9yaXR5OgojICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiMgICAgICB1cmxTdWJzdGl0dXRpb25FeHA6CiMgICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2EuZXhhbXBsZS5jb20KIyAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzEuZXhhbXBsZS5jb20KIwojICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspCiMgICAgICB1cmxTdWJzdGl0dXRpb25FeHA6CiMgICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2EuZXhhbXBsZS5jb20KIyAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20KCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIwojICAgIE9wZXJhdGlvbnMgc2VjdGlvbgojICAgIGNvcGllZCBmcm9tIEZhYnJpYydzIGNvcmUueWFtbAojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCm9wZXJhdGlvbnM6CiAgIyBob3N0IGFuZCBwb3J0IGZvciB0aGUgb3BlcmF0aW9ucyBzZXJ2ZXIKICBsaXN0ZW5BZGRyZXNzOiAxMjcuMC4wLjE6ODA4MAoKICAjIFRMUyBjb25maWd1cmF0aW9uIGZvciB0aGUgb3BlcmF0aW9ucyBlbmRwb2ludAogIHRsczoKICAgICMgVExTIGVuYWJsZWQKICAgIGVuYWJsZWQ6IGZhbHNlCgogICAgIyBUT0RPIHJlcGxhY2UgY2VydC5maWxlLCBrZXkuZmlsZSBhbmQgY2xpZW50Um9vdENBcy5maWxlcyB0byB0bHNDQUNlcnRzIGFzIHVzZWQgZWxzZXdoZXJlIGluIHRoaXMgY29uZmlnIGZpbGUKICAgICMgcGF0aCB0byBQRU0gZW5jb2RlZCBzZXJ2ZXIgY2VydGlmaWNhdGUgZm9yIHRoZSBvcGVyYXRpb25zIHNlcnZlcgogICAgY2VydDoKICAgICAgZmlsZToKCiAgICAjIHBhdGggdG8gUEVNIGVuY29kZWQgc2VydmVyIGtleSBmb3IgdGhlIG9wZXJhdGlvbnMgc2VydmVyCiAgICBrZXk6CiAgICAgIGZpbGU6CgogICAgIyByZXF1aXJlIGNsaWVudCBjZXJ0aWZpY2F0ZSBhdXRoZW50aWNhdGlvbiB0byBhY2Nlc3MgYWxsIHJlc291cmNlcwogICAgY2xpZW50QXV0aFJlcXVpcmVkOiBmYWxzZQoKICAgICMgcGF0aHMgdG8gUEVNIGVuY29kZWQgY2EgY2VydGlmaWNhdGVzIHRvIHRydXN0IGZvciBjbGllbnQgYXV0aGVudGljYXRpb24KICAgIGNsaWVudFJvb3RDQXM6CiAgICAgIGZpbGVzOiBbXQoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojCiMgICAgTWV0cmljcyBzZWN0aW9uCiMgICAgY29waWVkIGZyb20gRmFicmljJ3MgY29yZS55YW1sCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKbWV0cmljczoKICAjIG1ldHJpY3MgcHJvdmlkZXIgaXMgb25lIG9mIHN0YXRzZCwgcHJvbWV0aGV1cywgb3IgZGlzYWJsZWQKICBwcm92aWRlcjogcHJvbWV0aGV1cwoKICAjIHN0YXRzZCBjb25maWd1cmF0aW9uCiAgc3RhdHNkOgogICAgIyBuZXR3b3JrIHR5cGU6IHRjcCBvciB1ZHAKICAgIG5ldHdvcms6IHVkcAoKICAgICMgc3RhdHNkIHNlcnZlciBhZGRyZXNzCiAgICBhZGRyZXNzOiAxMjcuMC4wLjE6ODEyNQoKICAgICMgdGhlIGludGVydmFsIGF0IHdoaWNoIGxvY2FsbHkgY2FjaGVkIGNvdW50ZXJzIGFuZCBnYXVnZXMgYXJlIHB1c2hlZAogICAgIyB0byBzdGF0c2Q7IHRpbWluZ3MgYXJlIHB1c2hlZCBpbW1lZGlhdGVseQogICAgd3JpdGVJbnRlcnZhbDogMTBzCgogICAgIyBwcmVmaXggaXMgcHJlcGVuZGVkIHRvIGFsbCBlbWl0dGVkIHN0YXRzZCBtZXRyaWNzCiAgICBwcmVmaXg6Cg=="
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          },
          {
           "name": "orgName",
           "type": "string",
           "required": true,
           "display": {
            "name": "Client organization name",
            "description": "Name of the organization that created the client user",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "org1"
          },
          {
           "name": "userName",
           "type": "string",
           "description": "Name of the client user",
           "required": true,
           "display": {
            "name": "Client user name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "User1"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1554441210000,
         "user": "flogo",
         "connectorName": "local-first-network",
         "connectorDescription": " "
        },
        "requestType": "invoke",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"color\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "transferMarblesBasedOnColor"
         },
         {
          "mapTo": "$INPUT['parameters']['color']",
          "type": "assign",
          "value": "$flow.content.color"
         },
         {
          "mapTo": "$INPUT['parameters']['newOwner']",
          "type": "assign",
          "value": "$flow.content.newOwner"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage16",
      "name": "LogMessage16",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: \", $activity[FabricRequest5].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return5",
      "name": "Return5",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest5].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']",
          "type": "array",
          "value": "{\"to\":\"$INPUT['returns']['data']\",\"from\":\"$activity[FabricRequest5].result\",\"type\":\"foreach\",\"fields\":[{\"to\":\"$INPUT.$$['key']\",\"from\":\"$.key\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['name']\",\"from\":\"$.value.name\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['color']\",\"from\":\"$.value.color\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['size']\",\"from\":\"$.value.size\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['owner']\",\"from\":\"$.value.owner\",\"type\":\"assign\"}]}"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage17",
      "name": "LogMessage17",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest5].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError5",
      "name": "ThrowError5",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest5].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage15",
      "to": "FabricRequest5",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest5",
      "to": "LogMessage16",
      "type": "expression",
      "value": "$activity[FabricRequest5].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage16",
      "to": "Return5",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest5",
      "to": "LogMessage17",
      "type": "expression",
      "value": "$activity[FabricRequest5].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage17",
      "to": "ThrowError5",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "content",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"color\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}"
       }
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Delete_Marble",
   "data": {
    "name": "Delete Marble",
    "description": "delete a marble by key",
    "tasks": [
     {
      "id": "LogMessage18",
      "name": "LogMessage18",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Delete Marble] \", $flow.name)"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest6",
      "name": "FabricRequest6",
      "activity": {
       "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "6c785450-55a9-11e9-98c5-0fe3500cf4b8",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgoKIwojIFNjaGVtYSB2ZXJzaW9uIG9mIHRoZSBjb250ZW50LiBVc2VkIGJ5IHRoZSBTREsgdG8gYXBwbHkgdGhlIGNvcnJlc3BvbmRpbmcgcGFyc2luZyBydWxlcy4KIwp2ZXJzaW9uOiAxLjAuMAoKIwojIFRoZSBjbGllbnQgc2VjdGlvbiB1c2VkIGJ5IEdPIFNESy4KIwpjbGllbnQ6CgogICMgV2hpY2ggb3JnYW5pemF0aW9uIGRvZXMgdGhpcyBhcHBsaWNhdGlvbiBpbnN0YW5jZSBiZWxvbmcgdG8/IFRoZSB2YWx1ZSBtdXN0IGJlIHRoZSBuYW1lIG9mIGFuIG9yZwogICMgZGVmaW5lZCB1bmRlciAib3JnYW5pemF0aW9ucyIKICBvcmdhbml6YXRpb246IG9yZzEKCiAgbG9nZ2luZzoKICAgIGxldmVsOiBpbmZvCgogICMgR2xvYmFsIGNvbmZpZ3VyYXRpb24gZm9yIHBlZXIsIGV2ZW50IHNlcnZpY2UgYW5kIG9yZGVyZXIgdGltZW91dHMKICAjIGlmIHRoaXMgdGhpcyBzZWN0aW9uIGlzIG9taXR0ZWQsIHRoZW4gZGVmYXVsdCB2YWx1ZXMgd2lsbCBiZSB1c2VkIChzYW1lIHZhbHVlcyBhcyBiZWxvdykKIyAgcGVlcjoKIyAgICB0aW1lb3V0OgojICAgICAgY29ubmVjdGlvbjogMTBzCiMgICAgICByZXNwb25zZTogMTgwcwojICAgICAgZGlzY292ZXJ5OgojICAgICAgICAjIEV4cGlyeSBwZXJpb2QgZm9yIGRpc2NvdmVyeSBzZXJ2aWNlIGdyZXlsaXN0IGZpbHRlcgojICAgICAgICAjIFRoZSBjaGFubmVsIGNsaWVudCB3aWxsIGdyZXlsaXN0IHBlZXJzIHRoYXQgYXJlIGZvdW5kIHRvIGJlIG9mZmxpbmUKIyAgICAgICAgIyB0byBwcmV2ZW50IHJlLXNlbGVjdGluZyB0aGVtIGluIHN1YnNlcXVlbnQgcmV0cmllcy4KIyAgICAgICAgIyBUaGlzIGludGVydmFsIHdpbGwgZGVmaW5lIGhvdyBsb25nIGEgcGVlciBpcyBncmV5bGlzdGVkCiMgICAgICAgIGdyZXlsaXN0RXhwaXJ5OiAxMHMKCiAgICAjIHRoZSBiZWxvdyB0aW1lb3V0cyBhcmUgY29tbWVudGVkIG91dCB0byB1c2UgdGhlIGRlZmF1bHQgdmFsdWVzIHRoYXQgYXJlIGZvdW5kIGluCiAgICAjICJwa2cvZmFiL2VuZHBvaW50Y29uZmlnLmdvIgogICAgIyB0aGUgY2xpZW50IGlzIGZyZWUgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgdmFsdWVzIGJ5IHVuY29tbWVudGluZyBhbmQgcmVzZXR0aW5nCiAgICAjIHRoZSB2YWx1ZXMgYXMgdGhleSBzZWUgZml0IGluIHRoZWlyIGNvbmZpZyBmaWxlCiMgICAgdGltZW91dDoKIyAgICAgIGNvbm5lY3Rpb246IDE1cwojICAgICAgcmVnaXN0cmF0aW9uUmVzcG9uc2U6IDE1cwojICBvcmRlcmVyOgojICAgIHRpbWVvdXQ6CiMgICAgICBjb25uZWN0aW9uOiAxNXMKIyAgICAgIHJlc3BvbnNlOiAxNXMKIyAgZ2xvYmFsOgojICAgIHRpbWVvdXQ6CiMgICAgICBxdWVyeTogMTgwcwojICAgICAgZXhlY3V0ZTogMTgwcwojICAgICAgcmVzbWdtdDogMTgwcwojICAgIGNhY2hlOgojICAgICAgY29ubmVjdGlvbklkbGU6IDMwcwojICAgICAgZXZlbnRTZXJ2aWNlSWRsZTogMm0KIyAgICAgIGNoYW5uZWxDb25maWc6IDMwbQojICAgICAgY2hhbm5lbE1lbWJlcnNoaXA6IDMwcwojICAgICAgZGlzY292ZXJ5OiAxMHMKIyAgICAgIHNlbGVjdGlvbjogMTBtCgogICMgUm9vdCBvZiB0aGUgTVNQIGRpcmVjdG9yaWVzIHdpdGgga2V5cyBhbmQgY2VydHMuCiAgY3J5cHRvY29uZmlnOgogICAgcGF0aDogJHtHT1BBVEh9L3NyYy9naXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy1zYW1wbGVzL2ZpcnN0LW5ldHdvcmsvY3J5cHRvLWNvbmZpZwoKICAjIFNvbWUgU0RLcyBzdXBwb3J0IHBsdWdnYWJsZSBLViBzdG9yZXMsIHRoZSBwcm9wZXJ0aWVzIHVuZGVyICJjcmVkZW50aWFsU3RvcmUiCiAgIyBhcmUgaW1wbGVtZW50YXRpb24gc3BlY2lmaWMKICBjcmVkZW50aWFsU3RvcmU6CiAgICAjIFtPcHRpb25hbF0uIFVzZWQgYnkgdXNlciBzdG9yZS4gTm90IG5lZWRlZCBpZiBhbGwgY3JlZGVudGlhbHMgYXJlIGVtYmVkZGVkIGluIGNvbmZpZ3VyYXRpb24KICAgICMgYW5kIGVucm9sbG1lbnRzIGFyZSBwZXJmb3JtZWQgZWxzd2hlcmUuCiAgICBwYXRoOiAiL3RtcC9zdGF0ZS1zdG9yZSIKCiAgICAjIFtPcHRpb25hbF0uIFNwZWNpZmljIHRvIHRoZSBDcnlwdG9TdWl0ZSBpbXBsZW1lbnRhdGlvbiB1c2VkIGJ5IEdPIFNESy4gU29mdHdhcmUtYmFzZWQgaW1wbGVtZW50YXRpb25zCiAgICAjIHJlcXVpcmluZyBhIGtleSBzdG9yZS4gUEtDUyMxMSBiYXNlZCBpbXBsZW1lbnRhdGlvbnMgZG9lcyBub3QuCiAgICBjcnlwdG9TdG9yZToKICAgICAgIyBTcGVjaWZpYyB0byB0aGUgdW5kZXJseWluZyBLZXlWYWx1ZVN0b3JlIHRoYXQgYmFja3MgdGhlIGNyeXB0byBrZXkgc3RvcmUuCiAgICAgIHBhdGg6IC90bXAvbXNwCgogICMgW09wdGlvbmFsXSBCQ0NTUCBjb25maWcgZm9yIHRoZSBjbGllbnQuIFVzZWQgYnkgR08gU0RLLgogIEJDQ1NQOgogICAgc2VjdXJpdHk6CiAgICAgZW5hYmxlZDogdHJ1ZQogICAgIGRlZmF1bHQ6CiAgICAgIHByb3ZpZGVyOiAiU1ciCiAgICAgaGFzaEFsZ29yaXRobTogIlNIQTIiCiAgICAgc29mdFZlcmlmeTogdHJ1ZQogICAgIGxldmVsOiAyNTYKCiAgdGxzQ2VydHM6CiAgICAjIFtPcHRpb25hbF0uIFVzZSBzeXN0ZW0gY2VydGlmaWNhdGUgcG9vbCB3aGVuIGNvbm5lY3RpbmcgdG8gcGVlcnMsIG9yZGVyZXJzIChmb3IgbmVnb3RpYXRpbmcgVExTKSBEZWZhdWx0OiBmYWxzZQogICAgc3lzdGVtQ2VydFBvb2w6IHRydWUKCiAgICAjIFtPcHRpb25hbF0uIENsaWVudCBrZXkgYW5kIGNlcnQgZm9yIFRMUyBoYW5kc2hha2Ugd2l0aCBwZWVycyBhbmQgb3JkZXJlcnMKICAgIGNsaWVudDoKICAgICAga2V5OgogICAgICAgIHBhdGg6ICR7R09QQVRIfS9zcmMvZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMtc2FtcGxlcy9maXJzdC1uZXR3b3JrL2NyeXB0by1jb25maWcvcGVlck9yZ2FuaXphdGlvbnMvb3JnMS5leGFtcGxlLmNvbS91c2Vycy9Vc2VyMUBvcmcxLmV4YW1wbGUuY29tL3Rscy9jbGllbnQua2V5CiAgICAgIGNlcnQ6CiAgICAgICAgcGF0aDogJHtHT1BBVEh9L3NyYy9naXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy1zYW1wbGVzL2ZpcnN0LW5ldHdvcmsvY3J5cHRvLWNvbmZpZy9wZWVyT3JnYW5pemF0aW9ucy9vcmcxLmV4YW1wbGUuY29tL3VzZXJzL1VzZXIxQG9yZzEuZXhhbXBsZS5jb20vdGxzL2NsaWVudC5jcnQKCiMKIyBbT3B0aW9uYWxdLiBCdXQgbW9zdCBhcHBzIHdvdWxkIGhhdmUgdGhpcyBzZWN0aW9uIHNvIHRoYXQgY2hhbm5lbCBvYmplY3RzIGNhbiBiZSBjb25zdHJ1Y3RlZAojIGJhc2VkIG9uIHRoZSBjb250ZW50IGJlbG93LiBJZiBhbiBhcHAgaXMgY3JlYXRpbmcgY2hhbm5lbHMsIHRoZW4gaXQgbGlrZWx5IHdpbGwgbm90IG5lZWQgdGhpcwojIHNlY3Rpb24uCiMKY2hhbm5lbHM6CgogICMgRGVmYXVsdCBjaGFubmVsIGlzIHVzZWQgaWYgY2hhbm5lbCBjb25maWd1cmF0aW9uIGlzIG1pc3Npbmcgb3IgaWYgZGVmaW5lZCBjaGFubmVsIGNvbmZpZ3VyYXRpb24gaXMgbWlzc2luZyBpbmZvCiAgIyBJZiBjaGFubmVsIGRvZXNuJ3QgZGVmaW5lIHBlZXJzIHRoZW4gcGVlcnMgZnJvbSBkZWZhdWx0IGNoYW5uZWwgd2lsbCBiZSB1c2VkCiAgIyBJZiBjaGFubmVsIGRvZXNuJ3QgZGVmaW5lIG9yZGVyZXMgdGhlbiBvcmRlcmVzIGZyb20gZGVmYXVsdCBjaGFubmVsIHdpbGwgYmUgdXNlZAogICMgSWYgY2hhbm5lbCBkb2Vzbid0IGRlZmluZSBwb2xpY2llcyB0aGVuIHBvbGljaWVzIGZyb20gZGVmYXVsdCBjaGFubmVsIHdpbGwgYmUgdXNlZC4KICAjIEFsc28sIGlmIGNoYW5uZWwgZGVmaW5lcyBwb2xpY2llcyBhbmQgc29tZSBwb2xpY3kgaW5mbyBpcyBtaXNzaW5nIHRoYW4gdGhhdCBtaXNzaW5nIGluZm8gd2lsbCBiZSBmaWxsZWQgZnJvbSBkZWZhdWx0IGNoYW5uZWwuCiAgX2RlZmF1bHQ6CgogICAgIyBbT3B0aW9uYWxdLiBsaXN0IG9mIHBlZXJzIGZyb20gcGFydGljaXBhdGluZyBvcmdzCiAgICBwZWVyczoKICAgICAgcGVlcjAub3JnMS5leGFtcGxlLmNvbToKICAgICAgICAjIFtPcHRpb25hbF0uIHdpbGwgdGhpcyBwZWVyIGJlIHNlbnQgdHJhbnNhY3Rpb24gcHJvcG9zYWxzIGZvciBlbmRvcnNlbWVudD8gVGhlIHBlZXIgbXVzdAogICAgICAgICMgaGF2ZSB0aGUgY2hhaW5jb2RlIGluc3RhbGxlZC4gVGhlIGFwcCBjYW4gYWxzbyB1c2UgdGhpcyBwcm9wZXJ0eSB0byBkZWNpZGUgd2hpY2ggcGVlcnMKICAgICAgICAjIHRvIHNlbmQgdGhlIGNoYWluY29kZSBpbnN0YWxsIHJlcXVlc3QuIERlZmF1bHQ6IHRydWUKICAgICAgICBlbmRvcnNpbmdQZWVyOiB0cnVlCgogICAgICAgICMgW09wdGlvbmFsXS4gd2lsbCB0aGlzIHBlZXIgYmUgc2VudCBxdWVyeSBwcm9wb3NhbHM/IFRoZSBwZWVyIG11c3QgaGF2ZSB0aGUgY2hhaW5jb2RlCiAgICAgICAgIyBpbnN0YWxsZWQuIFRoZSBhcHAgY2FuIGFsc28gdXNlIHRoaXMgcHJvcGVydHkgdG8gZGVjaWRlIHdoaWNoIHBlZXJzIHRvIHNlbmQgdGhlCiAgICAgICAgIyBjaGFpbmNvZGUgaW5zdGFsbCByZXF1ZXN0LiBEZWZhdWx0OiB0cnVlCiAgICAgICAgY2hhaW5jb2RlUXVlcnk6IHRydWUKCiAgICAgICAgIyBbT3B0aW9uYWxdLiB3aWxsIHRoaXMgcGVlciBiZSBzZW50IHF1ZXJ5IHByb3Bvc2FscyB0aGF0IGRvIG5vdCByZXF1aXJlIGNoYWluY29kZXMsIGxpa2UKICAgICAgICAjIHF1ZXJ5QmxvY2soKSwgcXVlcnlUcmFuc2FjdGlvbigpLCBldGMuIERlZmF1bHQ6IHRydWUKICAgICAgICBsZWRnZXJRdWVyeTogdHJ1ZQoKICAgICAgICAjIFtPcHRpb25hbF0uIHdpbGwgdGhpcyBwZWVyIGJlIHRoZSB0YXJnZXQgb2YgdGhlIFNESydzIGxpc3RlbmVyIHJlZ2lzdHJhdGlvbj8gQWxsIHBlZXJzIGNhbgogICAgICAgICMgcHJvZHVjZSBldmVudHMgYnV0IHRoZSBhcHAgdHlwaWNhbGx5IG9ubHkgbmVlZHMgdG8gY29ubmVjdCB0byBvbmUgdG8gbGlzdGVuIHRvIGV2ZW50cy4KICAgICAgICAjIERlZmF1bHQ6IHRydWUKICAgICAgICBldmVudFNvdXJjZTogdHJ1ZQoKICAgICMgW09wdGlvbmFsXS4gVGhlIGFwcGxpY2F0aW9uIGNhbiB1c2UgdGhlc2Ugb3B0aW9ucyB0byBwZXJmb3JtIGNoYW5uZWwgb3BlcmF0aW9ucyBsaWtlIHJldHJpZXZpbmcgY2hhbm5lbAogICAgIyBjb25maWcgZXRjLgogICAgcG9saWNpZXM6CiAgICAgICNbT3B0aW9uYWxdIG9wdGlvbnMgZm9yIHJldHJpZXZpbmcgZGlzY292ZXJ5IGluZm8KICAgICAgZGlzY292ZXJ5OgogICAgICAgICNbT3B0aW9uYWxdIGRpc2NvdmVyeSBpbmZvIHdpbGwgYmUgcmV0cmlldmVkIGZvciB0aGVzZSBudW1iZXIgb2YgcmFuZG9tIHRhcmdldHMKICAgICAgICBtYXhUYXJnZXRzOiAyCiAgICAgICAgI1tPcHRpb25hbF0gcmV0cnkgb3B0aW9ucyBmb3IgcmV0cml2aW5nIGRpc2NvdmVyeSBpbmZvCiAgICAgICAgcmV0cnlPcHRzOgogICAgICAgICAgI1tPcHRpb25hbF0gbnVtYmVyIG9mIHJldHJ5IGF0dGVtcHRzCiAgICAgICAgICBhdHRlbXB0czogNAogICAgICAgICAgI1tPcHRpb25hbF0gdGhlIGJhY2sgb2ZmIGludGVydmFsIGZvciB0aGUgZmlyc3QgcmV0cnkgYXR0ZW1wdAogICAgICAgICAgaW5pdGlhbEJhY2tvZmY6IDUwMG1zCiAgICAgICAgICAjW09wdGlvbmFsXSB0aGUgbWF4aW11bSBiYWNrIG9mZiBpbnRlcnZhbCBmb3IgYW55IHJldHJ5IGF0dGVtcHQKICAgICAgICAgIG1heEJhY2tvZmY6IDVzCiAgICAgICAgICAjW09wdGlvbmFsXSBoZSBmYWN0b3IgYnkgd2hpY2ggdGhlIGluaXRpYWwgYmFjayBvZmYgcGVyaW9kIGlzIGV4cG9uZW50aWFsbHkgaW5jcmVtZW50ZWQKICAgICAgICAgIGJhY2tvZmZGYWN0b3I6IDIuMAogICAgICAjW09wdGlvbmFsXSBvcHRpb25zIGZvciBzZWxlY3Rpb24gc2VydmljZQogICAgICBzZWxlY3Rpb246CiAgICAgICAgI1tPcHRpb25hbF0gZW5kb3JzZXIgc2VsZWN0aW9uIHNvcnRpbmcgc3RyYXRlZ3kuIFBvc3NpYmxlIHZhbHVlczogW0Jsb2NrSGVpZ2h0UHJpb3JpdHksQmFsYW5jZWRdCiAgICAgICAgU29ydGluZ1N0cmF0ZWd5OiBCbG9ja0hlaWdodFByaW9yaXR5CiAgICAgICAgI1tPcHRpb25hbF0gbG9hZC1iYWxhbmNlciB0eXBlLiBQb3NzaWJsZSB2YWx1ZXM6IFtSb3VuZFJvYmluLFJhbmRvbV0KICAgICAgICBCYWxhbmNlcjogUm91bmRSb2JpbgogICAgICAgICNbT3B0aW9uYWxdIHRoZSBudW1iZXIgb2YgYmxvY2tzIGZyb20gdGhlIGhpZ2hlc3QgYmxvY2sgbnVtYmVyIG9mIGEgZ3JvdXAgb2YgcGVlcnMgdGhhdCBhIHBlZXIKICAgICAgICAjY2FuIGxhZyBiZWhpbmQgYW5kIHN0aWxsIGJlIGNvbnNpZGVyZWQgdG8gYmUgdXAtdG8tZGF0ZS4gVGhlc2UgcGVlcnMgd2lsbCBiZSBzb3J0ZWQgdXNpbmcgdGhlCiAgICAgICAgI2dpdmVuIEJhbGFuY2VyLiBJZiBhIHBlZXIncyBibG9jayBoZWlnaHQgZmFsbHMgYmVoaW5kIHRoaXMgdGhyZXNob2xkIHRoZW4gaXQgd2lsbCBiZSBkZW1vdGVkCiAgICAgICAgI3RvIGEgbG93ZXIgcHJpb3JpdHkgbGlzdCBvZiBwZWVycyB3aGljaCB3aWxsIGJlIHNvcnRlZCBhY2NvcmRpbmcgdG8gYmxvY2sgaGVpZ2h0LgogICAgICAgICNOb3RlOiBUaGlzIHByb3BlcnR5IG9ubHkgYXBwbGllcyB0byBCbG9ja0hlaWdodFByaW9yaXR5IHNvcnRlci4KICAgICAgICBCbG9ja0hlaWdodExhZ1RocmVzaG9sZDogNQogICAgICAjW09wdGlvbmFsXSBvcHRpb25zIGZvciByZXRyaWV2aW5nIGNoYW5uZWwgY29uZmlndXJhdGlvbiBibG9ja3MKICAgICAgcXVlcnlDaGFubmVsQ29uZmlnOgogICAgICAgICNbT3B0aW9uYWxdIG1pbiBudW1iZXIgb2Ygc3VjY2VzcyByZXNwb25zZXMgKGZyb20gdGFyZ2V0cy9wZWVycykKICAgICAgICBtaW5SZXNwb25zZXM6IDEKICAgICAgICAjW09wdGlvbmFsXSBjaGFubmVsIGNvbmZpZyB3aWxsIGJlIHJldHJpZXZlZCBmb3IgdGhlc2UgbnVtYmVyIG9mIHJhbmRvbSB0YXJnZXRzCiAgICAgICAgbWF4VGFyZ2V0czogMQogICAgICAgICNbT3B0aW9uYWxdIHJldHJ5IG9wdGlvbnMgZm9yIHF1ZXJ5IGNvbmZpZyBibG9jawogICAgICAgIHJldHJ5T3B0czoKICAgICAgICAgICNbT3B0aW9uYWxdIG51bWJlciBvZiByZXRyeSBhdHRlbXB0cwogICAgICAgICAgYXR0ZW1wdHM6IDUKICAgICAgICAgICNbT3B0aW9uYWxdIHRoZSBiYWNrIG9mZiBpbnRlcnZhbCBmb3IgdGhlIGZpcnN0IHJldHJ5IGF0dGVtcHQKICAgICAgICAgIGluaXRpYWxCYWNrb2ZmOiA1MDBtcwogICAgICAgICAgI1tPcHRpb25hbF0gdGhlIG1heGltdW0gYmFjayBvZmYgaW50ZXJ2YWwgZm9yIGFueSByZXRyeSBhdHRlbXB0CiAgICAgICAgICBtYXhCYWNrb2ZmOiA1cwogICAgICAgICAgI1tPcHRpb25hbF0gaGUgZmFjdG9yIGJ5IHdoaWNoIHRoZSBpbml0aWFsIGJhY2sgb2ZmIHBlcmlvZCBpcyBleHBvbmVudGlhbGx5IGluY3JlbWVudGVkCiAgICAgICAgICBiYWNrb2ZmRmFjdG9yOiAyLjAKCiAgICAgICNbT3B0aW9uYWxdIG9wdGlvbnMgZm9yIHRoZSBldmVudCBzZXJ2aWNlCiAgICAgIGV2ZW50U2VydmljZToKICAgICAgICAjIFtPcHRpb25hbF0gcmVzb2x2ZXJTdHJhdGVneSBzcGVjaWZpZXMgdGhlIHBlZXIgcmVzb2x2ZXIgc3RyYXRlZ3kgdG8gdXNlIHdoZW4gY29ubmVjdGluZyB0byBhIHBlZXIKICAgICAgICAjIFBvc3NpYmxlIHZhbHVlczogW1ByZWZlck9yZyAoZGVmYXVsdCksIE1pbkJsb2NrSGVpZ2h0LCBCYWxhbmNlZF0KICAgICAgICAjCiAgICAgICAgIyBQcmVmZXJPcmc6CiAgICAgICAgIyAgIERldGVybWluZXMgd2hpY2ggcGVlcnMgYXJlIHN1aXRhYmxlIGJhc2VkIG9uIGJsb2NrIGhlaWdodCBsYWcgdGhyZXNob2xkLCBhbHRob3VnaCB3aWxsIHByZWZlciB0aGUgcGVlcnMgaW4gdGhlCiAgICAgICAgIyAgIGN1cnJlbnQgb3JnIChhcyBsb25nIGFzIHRoZWlyIGJsb2NrIGhlaWdodCBpcyBhYm92ZSBhIGNvbmZpZ3VyZWQgdGhyZXNob2xkKS4gSWYgbm9uZSBvZiB0aGUgcGVlcnMgZnJvbSB0aGUgY3VycmVudCBvcmcKICAgICAgICAjICAgYXJlIHN1aXRhYmxlIHRoZW4gYSBwZWVyIGZyb20gYW5vdGhlciBvcmcgaXMgY2hvc2VuLgogICAgICAgICMgTWluQmxvY2tIZWlnaHQ6CiAgICAgICAgIyAgIENob29zZXMgdGhlIGJlc3QgcGVlciBhY2NvcmRpbmcgdG8gYSBibG9jayBoZWlnaHQgbGFnIHRocmVzaG9sZC4gVGhlIG1heGltdW0gYmxvY2sgaGVpZ2h0IG9mIGFsbCBwZWVycyBpcwogICAgICAgICMgICBkZXRlcm1pbmVkIGFuZCB0aGUgcGVlcnMgd2hvc2UgYmxvY2sgaGVpZ2h0cyBhcmUgdW5kZXIgdGhlIG1heGltdW0gaGVpZ2h0IGJ1dCBhYm92ZSBhIHByb3ZpZGVkICJsYWciIHRocmVzaG9sZCBhcmUgbG9hZAogICAgICAgICMgICBiYWxhbmNlZC4gVGhlIG90aGVyIHBlZXJzIGFyZSBub3QgY29uc2lkZXJlZC4KICAgICAgICAjIEJhbGFuY2VkOgogICAgICAgICMgICBDaG9vc2VzIHBlZXJzIHVzaW5nIHRoZSBjb25maWd1cmVkIGJhbGFuY2VyLgogICAgICAgIHJlc29sdmVyU3RyYXRlZ3k6IFByZWZlck9yZwoKICAgICAgICAjIFtPcHRpb25hbF0gYmFsYW5jZXIgaXMgdGhlIGJhbGFuY2VyIHRvIHVzZSB3aGVuIGNob29zaW5nIGEgcGVlciB0byBjb25uZWN0IHRvCiAgICAgICAgIyBQb3NzaWJsZSB2YWx1ZXM6IFtSYW5kb20gKGRlZmF1bHQpLCBSb3VuZFJvYmluXQogICAgICAgIGJhbGFuY2VyOiBSb3VuZFJvYmluCgogICAgICAgICMgW09wdGlvbmFsXSBibG9ja0hlaWdodExhZ1RocmVzaG9sZCBzZXRzIHRoZSBibG9jayBoZWlnaHQgbGFnIHRocmVzaG9sZC4gVGhpcyB2YWx1ZSBpcyB1c2VkIGZvciBjaG9vc2luZyBhIHBlZXIKICAgICAgICAjIHRvIGNvbm5lY3QgdG8uIElmIGEgcGVlciBpcyBsYWdnaW5nIGJlaGluZCB0aGUgbW9zdCB1cC10by1kYXRlIHBlZXIgYnkgbW9yZSB0aGFuIHRoZSBnaXZlbiBudW1iZXIgb2YKICAgICAgICAjIGJsb2NrcyB0aGVuIGl0IHdpbGwgYmUgZXhjbHVkZWQgZnJvbSBzZWxlY3Rpb24uCiAgICAgICAgIyBOb3RlIHRoYXQgdGhpcyBwYXJhbWV0ZXIgaXMgYXBwbGljYWJsZSBvbmx5IHdoZW4gbWluQmxvY2tIZWlnaHRSZXNvbHZlck1vZGUgaXMgc2V0IHRvIFJlc29sdmVCeVRocmVzaG9sZC4KICAgICAgICAjIERlZmF1bHQ6IDUKICAgICAgICBibG9ja0hlaWdodExhZ1RocmVzaG9sZDogMgoKICAgICAgICAjIFtPcHRpb25hbF0gcmVjb25uZWN0QmxvY2tIZWlnaHRMYWdUaHJlc2hvbGQgLSB0aGUgZXZlbnQgY2xpZW50IHdpbGwgZGlzY29ubmVjdCBmcm9tIHRoZSBwZWVyIGlmIHRoZSBwZWVyJ3MKICAgICAgICAjIGJsb2NrIGhlaWdodCBmYWxscyBiZWhpbmQgdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgYmxvY2tzIGFuZCB3aWxsIHJlY29ubmVjdCB0byBhIGJldHRlciBwZXJmb3JtaW5nIHBlZXIuCiAgICAgICAgIyBOb3RlIHRoYXQgdGhpcyBwYXJhbWV0ZXIgaXMgb25seSBhcHBsaWNhYmxlIGlmIHBlZXJNb25pdG9yIGlzIHNldCB0byBFbmFibGVkIChkZWZhdWx0KS4KICAgICAgICAjIERlZmF1bHQ6IDEwCiAgICAgICAgIyBOT1RFUzoKICAgICAgICAjICAgLSBTZXR0aW5nIHRoaXMgdmFsdWUgdG9vIGxvdyBtYXkgY2F1c2UgdGhlIGV2ZW50IGNsaWVudCB0byBkaXNjb25uZWN0L3JlY29ubmVjdCB0b28gZnJlcXVlbnRseSwgdGhlcmVieQogICAgICAgICMgICAgIGFmZmVjdGluZyBwZXJmb3JtYW5jZS4KICAgICAgICByZWNvbm5lY3RCbG9ja0hlaWdodExhZ1RocmVzaG9sZDogNQoKICAgICAgICAjIFtPcHRpb25hbF0gcGVlck1vbml0b3JQZXJpb2QgaXMgdGhlIHBlcmlvZCBpbiB3aGljaCB0aGUgY29ubmVjdGVkIHBlZXIgaXMgbW9uaXRvcmVkIHRvIHNlZSBpZgogICAgICAgICMgdGhlIGV2ZW50IGNsaWVudCBzaG91bGQgZGlzY29ubmVjdCBmcm9tIGl0IGFuZCByZWNvbm5lY3QgdG8gYW5vdGhlciBwZWVyLgogICAgICAgICMgRGVmYXVsdDogMCAoZGlzYWJsZWQpIGZvciBCYWxhbmNlZCByZXNvbHZlclN0cmF0ZWd5OyA1cyBmb3IgUHJlZmVyT3JnIGFuZCBNaW5CbG9ja0hlaWdodCBzdHJhdGVneQogICAgICAgIHBlZXJNb25pdG9yUGVyaW9kOiAzcwoKICAjIE15Y2hhbm5lbCBvdmVycmlkZXMgaW5pdGlhbEJhY2tvZmYgZm9yIGRpc2NvdmVyeQogIG15Y2hhbm5lbDoKICAgIHBvbGljaWVzOgogICAgICBkaXNjb3Zlcnk6CiAgICAgICAgcmV0cnlPcHRzOgogICAgICAgICAgI1tSZXF1aXJlZCBmb3Igb3ZlcnJpZGVdIG51bWJlciBvZiByZXRyeSBhdHRlbXB0cwogICAgICAgICAgYXR0ZW1wdHM6IDQKICAgICAgICAgIGluaXRpYWxCYWNrb2ZmOiAxcwoKIyAgICBvcmRlcmVyczoKIyAgICAgIC0gb3JkZXJlci5leGFtcGxlLmNvbQoKICAgIHBlZXJzOgogICAgICBwZWVyMC5vcmcxLmV4YW1wbGUuY29tOgogICAgICAgIGVuZG9yc2luZ1BlZXI6IHRydWUKICAgICAgICBjaGFpbmNvZGVRdWVyeTogdHJ1ZQogICAgICAgIGxlZGdlclF1ZXJ5OiB0cnVlCiAgICAgICAgZXZlbnRTb3VyY2U6IHRydWUKCiAgICAgIHBlZXIxLm9yZzEuZXhhbXBsZS5jb206CiAgICAgICAgZW5kb3JzaW5nUGVlcjogdHJ1ZQogICAgICAgIGNoYWluY29kZVF1ZXJ5OiB0cnVlCiAgICAgICAgbGVkZ2VyUXVlcnk6IHRydWUKICAgICAgICBldmVudFNvdXJjZTogdHJ1ZQoKICAgICAgcGVlcjAub3JnMi5leGFtcGxlLmNvbToKICAgICAgICBlbmRvcnNpbmdQZWVyOiB0cnVlCiAgICAgICAgY2hhaW5jb2RlUXVlcnk6IHRydWUKICAgICAgICBsZWRnZXJRdWVyeTogdHJ1ZQogICAgICAgIGV2ZW50U291cmNlOiB0cnVlCgogICAgICBwZWVyMS5vcmcyLmV4YW1wbGUuY29tOgogICAgICAgIGVuZG9yc2luZ1BlZXI6IHRydWUKICAgICAgICBjaGFpbmNvZGVRdWVyeTogdHJ1ZQogICAgICAgIGxlZGdlclF1ZXJ5OiB0cnVlCiAgICAgICAgZXZlbnRTb3VyY2U6IHRydWUKCiMKIyBsaXN0IG9mIHBhcnRpY2lwYXRpbmcgb3JnYW5pemF0aW9ucyBpbiB0aGlzIG5ldHdvcmsKIwpvcmdhbml6YXRpb25zOgogIG9yZzE6CiAgICBtc3BpZDogT3JnMU1TUAoKICAgICMgVGhpcyBvcmcncyBNU1Agc3RvcmUgKGFic29sdXRlIHBhdGggb3IgcmVsYXRpdmUgdG8gY2xpZW50LmNyeXB0b2NvbmZpZykKICAgIGNyeXB0b1BhdGg6ICBwZWVyT3JnYW5pemF0aW9ucy9vcmcxLmV4YW1wbGUuY29tL3VzZXJzL3t1c2VybmFtZX1Ab3JnMS5leGFtcGxlLmNvbS9tc3AKCiAgICBwZWVyczoKICAgICAgLSBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIC0gcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgICMgW09wdGlvbmFsXS4gQ2VydGlmaWNhdGUgQXV0aG9yaXRpZXMgaXNzdWUgY2VydGlmaWNhdGVzIGZvciBpZGVudGlmaWNhdGlvbiBwdXJwb3NlcyBpbiBhIEZhYnJpYyBiYXNlZAogICAgIyBuZXR3b3JrLiBUeXBpY2FsbHkgY2VydGlmaWNhdGVzIHByb3Zpc2lvbmluZyBpcyBkb25lIGluIGEgc2VwYXJhdGUgcHJvY2VzcyBvdXRzaWRlIG9mIHRoZQogICAgIyBydW50aW1lIG5ldHdvcmsuIEZhYnJpYy1DQSBpcyBhIHNwZWNpYWwgY2VydGlmaWNhdGUgYXV0aG9yaXR5IHRoYXQgcHJvdmlkZXMgYSBSRVNUIEFQSXMgZm9yCiAgICAjIGR5bmFtaWMgY2VydGlmaWNhdGUgbWFuYWdlbWVudCAoZW5yb2xsLCByZXZva2UsIHJlLWVucm9sbCkuIFRoZSBmb2xsb3dpbmcgc2VjdGlvbiBpcyBvbmx5IGZvcgogICAgIyBGYWJyaWMtQ0Egc2VydmVycy4KICAgIGNlcnRpZmljYXRlQXV0aG9yaXRpZXM6CiAgICAgIC0gY2Eub3JnMS5leGFtcGxlLmNvbQoKICAjIHRoZSBwcm9maWxlIHdpbGwgY29udGFpbiBwdWJsaWMgaW5mb3JtYXRpb24gYWJvdXQgb3JnYW5pemF0aW9ucyBvdGhlciB0aGFuIHRoZSBvbmUgaXQgYmVsb25ncyB0by4KICAjIFRoZXNlIGFyZSBuZWNlc3NhcnkgaW5mb3JtYXRpb24gdG8gbWFrZSB0cmFuc2FjdGlvbiBsaWZlY3ljbGVzIHdvcmssIGluY2x1ZGluZyBNU1AgSURzIGFuZAogICMgcGVlcnMgd2l0aCBhIHB1YmxpYyBVUkwgdG8gc2VuZCB0cmFuc2FjdGlvbiBwcm9wb3NhbHMuIFRoZSBmaWxlIHdpbGwgbm90IGNvbnRhaW4gcHJpdmF0ZQogICMgaW5mb3JtYXRpb24gcmVzZXJ2ZWQgZm9yIG1lbWJlcnMgb2YgdGhlIG9yZ2FuaXphdGlvbiwgc3VjaCBhcyBhZG1pbiBrZXkgYW5kIGNlcnRpZmljYXRlLAogICMgZmFicmljLWNhIHJlZ2lzdHJhciBlbnJvbGwgSUQgYW5kIHNlY3JldCwgZXRjLgogIG9yZzI6CiAgICBtc3BpZDogT3JnMk1TUAoKICAgICMgVGhpcyBvcmcncyBNU1Agc3RvcmUgKGFic29sdXRlIHBhdGggb3IgcmVsYXRpdmUgdG8gY2xpZW50LmNyeXB0b2NvbmZpZykKICAgIGNyeXB0b1BhdGg6ICBwZWVyT3JnYW5pemF0aW9ucy9vcmcyLmV4YW1wbGUuY29tL3VzZXJzL3t1c2VybmFtZX1Ab3JnMi5leGFtcGxlLmNvbS9tc3AKCiAgICBwZWVyczoKICAgICAgLSBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIC0gcGVlcjEub3JnMi5leGFtcGxlLmNvbQoKICAgIGNlcnRpZmljYXRlQXV0aG9yaXRpZXM6CiAgICAgIC0gY2Eub3JnMi5leGFtcGxlLmNvbQoKICAjIE9yZGVyZXIgT3JnIG5hbWUKICBvcmRlcmVyb3JnOgogICAgICAjIE1lbWJlcnNoaXAgU2VydmljZSBQcm92aWRlciBJRCBmb3IgdGhpcyBvcmdhbml6YXRpb24KICAgICAgbXNwSUQ6IE9yZGVyZXJNU1AKCiAgICAgICMgTmVlZGVkIHRvIGxvYWQgdXNlcnMgY3J5cHRvIGtleXMgYW5kIGNlcnRzIGZvciB0aGlzIG9yZyAoYWJzb2x1dGUgcGF0aCBvciByZWxhdGl2ZSB0byBnbG9iYWwgY3J5cHRvIHBhdGgsIERFViBtb2RlKQogICAgICBjcnlwdG9QYXRoOiBvcmRlcmVyT3JnYW5pemF0aW9ucy9leGFtcGxlLmNvbS91c2Vycy97dXNlcm5hbWV9QGV4YW1wbGUuY29tL21zcAoKCiMKIyBMaXN0IG9mIG9yZGVyZXJzIHRvIHNlbmQgdHJhbnNhY3Rpb24gYW5kIGNoYW5uZWwgY3JlYXRlL3VwZGF0ZSByZXF1ZXN0cyB0by4gRm9yIHRoZSB0aW1lCiMgYmVpbmcgb25seSBvbmUgb3JkZXJlciBpcyBuZWVkZWQuIElmIG1vcmUgdGhhbiBvbmUgaXMgZGVmaW5lZCwgd2hpY2ggb25lIGdldCB1c2VkIGJ5IHRoZQojIFNESyBpcyBpbXBsZW1lbnRhdGlvbiBzcGVjaWZpYy4gQ29uc3VsdCBlYWNoIFNESydzIGRvY3VtZW50YXRpb24gZm9yIGl0cyBoYW5kbGluZyBvZiBvcmRlcmVycy4KIwpvcmRlcmVyczoKICBfZGVmYXVsdDoKICAgICMgY29tbW9uIG9yZGVyZXIgY29uZmlnIGl0ZW1zIGJldHdlZW4gYWxsIHRoZSBvcmRlcmVycyBpbiAgY29uZmlnCiAgICAjIHRoZXNlIGFyZSBzdGFuZGFyZCBwcm9wZXJ0aWVzIGRlZmluZWQgYnkgdGhlIGdSUEMgbGlicmFyeQogICAgIyB0aGV5IHdpbGwgYmUgcGFzc2VkIGluIGFzLWlzIHRvIGdSUEMgY2xpZW50IGNvbnN0cnVjdG9yCiAgICBncnBjT3B0aW9uczoKICAgICAgIyBUaGVzZSBwYXJhbWV0ZXJzIHNob3VsZCBiZSBzZXQgaW4gY29vcmRpbmF0aW9uIHdpdGggdGhlIGtlZXBhbGl2ZSBwb2xpY3kgb24gdGhlIHNlcnZlciwKICAgICAgIyBhcyBpbmNvbXBhdGlibGUgc2V0dGluZ3MgY2FuIHJlc3VsdCBpbiBjbG9zaW5nIG9mIGNvbm5lY3Rpb24uCiAgICAgICMgV2hlbiBkdXJhdGlvbiBvZiB0aGUgJ2tlZXAtYWxpdmUtdGltZScgaXMgc2V0IHRvIDAgb3IgbGVzcyB0aGUga2VlcCBhbGl2ZSBjbGllbnQgcGFyYW1ldGVycyBhcmUgZGlzYWJsZWQKICAgICAga2VlcC1hbGl2ZS10aW1lOiAwcwogICAgICBrZWVwLWFsaXZlLXRpbWVvdXQ6IDIwcwogICAgICBrZWVwLWFsaXZlLXBlcm1pdDogZmFsc2UKICAgICAgZmFpbC1mYXN0OiBmYWxzZQogICAgICAjIGFsbG93LWluc2VjdXJlIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uIGlmIGFkZHJlc3MgaGFzIG5vIHByb3RvY29sIGRlZmluZWQsIGlmIHRydWUgdGhlbiBncnBjIG9yIGVsc2UgZ3JwY3MKICAgICAgYWxsb3ctaW5zZWN1cmU6IGZhbHNlCgogIG9yZGVyZXIuZXhhbXBsZS5jb206CiAgICAjIFtPcHRpb25hbF0gRGVmYXVsdDogSW5mZXIgZnJvbSBob3N0bmFtZQogICAgdXJsOiBvcmRlcmVyLmV4YW1wbGUuY29tOjcwNTAKCiAgICAjIHRoZXNlIGFyZSBzdGFuZGFyZCBwcm9wZXJ0aWVzIGRlZmluZWQgYnkgdGhlIGdSUEMgbGlicmFyeQogICAgIyB0aGV5IHdpbGwgYmUgcGFzc2VkIGluIGFzLWlzIHRvIGdSUEMgY2xpZW50IGNvbnN0cnVjdG9yCiAgICBncnBjT3B0aW9uczoKICAgICAgI3NzbC10YXJnZXQtbmFtZS1vdmVycmlkZTogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICAjIFRoZXNlIHBhcmFtZXRlcnMgc2hvdWxkIGJlIHNldCBpbiBjb29yZGluYXRpb24gd2l0aCB0aGUga2VlcGFsaXZlIHBvbGljeSBvbiB0aGUgc2VydmVyLAogICAgICAjIGFzIGluY29tcGF0aWJsZSBzZXR0aW5ncyBjYW4gcmVzdWx0IGluIGNsb3Npbmcgb2YgY29ubmVjdGlvbi4KICAgICAgIyBXaGVuIGR1cmF0aW9uIG9mIHRoZSAna2VlcC1hbGl2ZS10aW1lJyBpcyBzZXQgdG8gMCBvciBsZXNzIHRoZSBrZWVwIGFsaXZlIGNsaWVudCBwYXJhbWV0ZXJzIGFyZSBkaXNhYmxlZAogICAgICAja2VlcC1hbGl2ZS10aW1lOiAwcwogICAgICAja2VlcC1hbGl2ZS10aW1lb3V0OiAyMHMKICAgICAgI2tlZXAtYWxpdmUtcGVybWl0OiBmYWxzZQogICAgICAjZmFpbC1mYXN0OiBmYWxzZQogICAgICAjIGFsbG93LWluc2VjdXJlIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uIGlmIGFkZHJlc3MgaGFzIG5vIHByb3RvY29sIGRlZmluZWQsIGlmIHRydWUgdGhlbiBncnBjIG9yIGVsc2UgZ3JwY3MKICAgICAgI2FsbG93LWluc2VjdXJlOiBmYWxzZQoKICAgIHRsc0NBQ2VydHM6CiAgICAgICMgQ2VydGlmaWNhdGUgbG9jYXRpb24gYWJzb2x1dGUgcGF0aAogICAgICBwYXRoOiAke0dPUEFUSH0vc3JjL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvZmlyc3QtbmV0d29yay9jcnlwdG8tY29uZmlnL29yZGVyZXJPcmdhbml6YXRpb25zL2V4YW1wbGUuY29tL3Rsc2NhL3Rsc2NhLmV4YW1wbGUuY29tLWNlcnQucGVtCgojCiMgTGlzdCBvZiBwZWVycyB0byBzZW5kIHZhcmlvdXMgcmVxdWVzdHMgdG8sIGluY2x1ZGluZyBlbmRvcnNlbWVudCwgcXVlcnkKIyBhbmQgZXZlbnQgbGlzdGVuZXIgcmVnaXN0cmF0aW9uLgojCnBlZXJzOgogIF9kZWZhdWx0OgogICAgI2NvbW1vbiBncnBjIG9wdGlvbnMgYmV0d2VlbiBhbGwgdGhlIHBlZXJzCiAgICBncnBjT3B0aW9uczoKICAgICAgIyBUaGVzZSBwYXJhbWV0ZXJzIHNob3VsZCBiZSBzZXQgaW4gY29vcmRpbmF0aW9uIHdpdGggdGhlIGtlZXBhbGl2ZSBwb2xpY3kgb24gdGhlIHNlcnZlciwKICAgICAgIyBhcyBpbmNvbXBhdGlibGUgc2V0dGluZ3MgY2FuIHJlc3VsdCBpbiBjbG9zaW5nIG9mIGNvbm5lY3Rpb24uCiAgICAgICMgV2hlbiBkdXJhdGlvbiBvZiB0aGUgJ2tlZXAtYWxpdmUtdGltZScgaXMgc2V0IHRvIDAgb3IgbGVzcyB0aGUga2VlcCBhbGl2ZSBjbGllbnQgcGFyYW1ldGVycyBhcmUgZGlzYWJsZWQKICAgICAga2VlcC1hbGl2ZS10aW1lOiAwcwogICAgICBrZWVwLWFsaXZlLXRpbWVvdXQ6IDIwcwogICAgICBrZWVwLWFsaXZlLXBlcm1pdDogZmFsc2UKICAgICAgZmFpbC1mYXN0OiBmYWxzZQogICAgICAjIGFsbG93LWluc2VjdXJlIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uIGlmIGFkZHJlc3MgaGFzIG5vIHByb3RvY29sIGRlZmluZWQsIGlmIHRydWUgdGhlbiBncnBjIG9yIGVsc2UgZ3JwY3MKICAgICAgYWxsb3ctaW5zZWN1cmU6IGZhbHNlCgogIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206CiAgICAjIHRoaXMgVVJMIGlzIHVzZWQgdG8gc2VuZCBlbmRvcnNlbWVudCBhbmQgcXVlcnkgcmVxdWVzdHMKICAgICMgW09wdGlvbmFsXSBEZWZhdWx0OiBJbmZlciBmcm9tIGhvc3RuYW1lCiAgICB1cmw6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb206NzA1MQoKICAgICNncnBjT3B0aW9uczoKICAgICMgIHNzbC10YXJnZXQtbmFtZS1vdmVycmlkZTogcGVlcjAub3JnMS5leGFtcGxlLmNvbQoKICAgIHRsc0NBQ2VydHM6CiAgICAgICMgQ2VydGlmaWNhdGUgbG9jYXRpb24gYWJzb2x1dGUgcGF0aAogICAgICBwYXRoOiAke0dPUEFUSH0vc3JjL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvZmlyc3QtbmV0d29yay9jcnlwdG8tY29uZmlnL3BlZXJPcmdhbml6YXRpb25zL29yZzEuZXhhbXBsZS5jb20vdGxzY2EvdGxzY2Eub3JnMS5leGFtcGxlLmNvbS1jZXJ0LnBlbQoKICBwZWVyMS5vcmcxLmV4YW1wbGUuY29tOgogICAgIyB0aGlzIFVSTCBpcyB1c2VkIHRvIHNlbmQgZW5kb3JzZW1lbnQgYW5kIHF1ZXJ5IHJlcXVlc3RzCiAgICB1cmw6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb206NzE1MQoKICAgICNncnBjT3B0aW9uczoKICAgICMgIHNzbC10YXJnZXQtbmFtZS1vdmVycmlkZTogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIHRsc0NBQ2VydHM6CiAgICAgICMgQ2VydGlmaWNhdGUgbG9jYXRpb24gYWJzb2x1dGUgcGF0aAogICAgICBwYXRoOiAke0dPUEFUSH0vc3JjL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvZmlyc3QtbmV0d29yay9jcnlwdG8tY29uZmlnL3BlZXJPcmdhbml6YXRpb25zL29yZzEuZXhhbXBsZS5jb20vdGxzY2EvdGxzY2Eub3JnMS5leGFtcGxlLmNvbS1jZXJ0LnBlbQoKICBwZWVyMC5vcmcyLmV4YW1wbGUuY29tOgogICAgdXJsOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tOjgwNTEKICAgICNncnBjT3B0aW9uczoKICAgICMgIHNzbC10YXJnZXQtbmFtZS1vdmVycmlkZTogcGVlcjAub3JnMi5leGFtcGxlLmNvbQoKICAgIHRsc0NBQ2VydHM6CiAgICAgIHBhdGg6ICR7R09QQVRIfS9zcmMvZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMtc2FtcGxlcy9maXJzdC1uZXR3b3JrL2NyeXB0by1jb25maWcvcGVlck9yZ2FuaXphdGlvbnMvb3JnMi5leGFtcGxlLmNvbS90bHNjYS90bHNjYS5vcmcyLmV4YW1wbGUuY29tLWNlcnQucGVtCgogIHBlZXIxLm9yZzIuZXhhbXBsZS5jb206CiAgICB1cmw6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb206OTA1MQogICAgI2dycGNPcHRpb25zOgogICAgIyAgc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgdGxzQ0FDZXJ0czoKICAgICAgcGF0aDogJHtHT1BBVEh9L3NyYy9naXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy1zYW1wbGVzL2ZpcnN0LW5ldHdvcmsvY3J5cHRvLWNvbmZpZy9wZWVyT3JnYW5pemF0aW9ucy9vcmcyLmV4YW1wbGUuY29tL3Rsc2NhL3Rsc2NhLm9yZzIuZXhhbXBsZS5jb20tY2VydC5wZW0KCiMKIyBGYWJyaWMtQ0EgaXMgYSBzcGVjaWFsIGtpbmQgb2YgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IHByb3ZpZGVkIGJ5IEh5cGVybGVkZ2VyIEZhYnJpYyB3aGljaCBhbGxvd3MKIyBjZXJ0aWZpY2F0ZSBtYW5hZ2VtZW50IHRvIGJlIGRvbmUgdmlhIFJFU1QgQVBJcy4gQXBwbGljYXRpb24gbWF5IGNob29zZSB0byB1c2UgYSBzdGFuZGFyZAojIENlcnRpZmljYXRlIEF1dGhvcml0eSBpbnN0ZWFkIG9mIEZhYnJpYy1DQSwgaW4gd2hpY2ggY2FzZSB0aGlzIHNlY3Rpb24gd291bGQgbm90IGJlIHNwZWNpZmllZC4KIwpjZXJ0aWZpY2F0ZUF1dGhvcml0aWVzOgogIGNhLm9yZzEuZXhhbXBsZS5jb206CiAgICAjIFtPcHRpb25hbF0gRGVmYXVsdDogSW5mZXIgZnJvbSBob3N0bmFtZQogICAgdXJsOiBodHRwczovL2NhLm9yZzEuZXhhbXBsZS5jb206NzA1NAogICAgIyBbT3B0aW9uYWxdIFRoZSBvcHRpb25hbCBzZXJ2ZXIgbmFtZSBmb3IgdGFyZ2V0IG92ZXJyaWRlCiAgICAjZ3JwY09wdGlvbnM6CiAgICAjICBzc2wtdGFyZ2V0LW5hbWUtb3ZlcnJpZGU6IGNhLm9yZzEuZXhhbXBsZS5jb20KICAgIHRsc0NBQ2VydHM6CiAgICAgICMgQ29tbWEtU2VwYXJhdGVkIGxpc3Qgb2YgcGF0aHMKICAgICAgcGF0aDogJHtHT1BBVEh9L3NyYy9naXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy1zYW1wbGVzL2ZpcnN0LW5ldHdvcmsvY3J5cHRvLWNvbmZpZy9wZWVyT3JnYW5pemF0aW9ucy9vcmcxLmV4YW1wbGUuY29tL3Rsc2NhL3Rsc2NhLm9yZzEuZXhhbXBsZS5jb20tY2VydC5wZW0KICAgICAgIyBDbGllbnQga2V5IGFuZCBjZXJ0IGZvciBTU0wgaGFuZHNoYWtlIHdpdGggRmFicmljIENBCiAgICAgIGNsaWVudDoKICAgICAgICBrZXk6CiAgICAgICAgICBwYXRoOiAke0dPUEFUSH0vc3JjL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvZmlyc3QtbmV0d29yay9jcnlwdG8tY29uZmlnL3BlZXJPcmdhbml6YXRpb25zL29yZzEuZXhhbXBsZS5jb20vdXNlcnMvVXNlcjFAb3JnMS5leGFtcGxlLmNvbS90bHMvY2xpZW50LmtleQogICAgICAgIGNlcnQ6CiAgICAgICAgICBwYXRoOiAke0dPUEFUSH0vc3JjL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvZmlyc3QtbmV0d29yay9jcnlwdG8tY29uZmlnL3BlZXJPcmdhbml6YXRpb25zL29yZzEuZXhhbXBsZS5jb20vdXNlcnMvVXNlcjFAb3JnMS5leGFtcGxlLmNvbS90bHMvY2xpZW50LmNydAoKICAgICMgRmFicmljLUNBIHN1cHBvcnRzIGR5bmFtaWMgdXNlciBlbnJvbGxtZW50IHZpYSBSRVNUIEFQSXMuIEEgInJvb3QiIHVzZXIsIGEuay5hIHJlZ2lzdHJhciwgaXMKICAgICMgbmVlZGVkIHRvIGVucm9sbCBhbmQgaW52b2tlIG5ldyB1c2Vycy4KICAgIHJlZ2lzdHJhcjoKICAgICAgZW5yb2xsSWQ6IGFkbWluCiAgICAgIGVucm9sbFNlY3JldDogYWRtaW5wdwogICAgIyBbT3B0aW9uYWxdIFRoZSBvcHRpb25hbCBuYW1lIG9mIHRoZSBDQS4KICAgIGNhTmFtZTogY2Eub3JnMS5leGFtcGxlLmNvbQogIGNhLm9yZzIuZXhhbXBsZS5jb206CiAgICB1cmw6IGh0dHBzOi8vY2Eub3JnMi5leGFtcGxlLmNvbTo4MDU0CiAgICAjIFtPcHRpb25hbF0gVGhlIG9wdGlvbmFsIHNlcnZlciBuYW1lIGZvciB0YXJnZXQgb3ZlcnJpZGUKICAgICNncnBjT3B0aW9uczoKICAgICMgIHNzbC10YXJnZXQtbmFtZS1vdmVycmlkZTogY2Eub3JnMi5leGFtcGxlLmNvbQogICAgdGxzQ0FDZXJ0czoKICAgICAgIyBDb21tYS1TZXBhcmF0ZWQgbGlzdCBvZiBwYXRocwogICAgICBwYXRoOiAke0dPUEFUSH0vc3JjL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXNhbXBsZXMvZmlyc3QtbmV0d29yay9jcnlwdG8tY29uZmlnL3BlZXJPcmdhbml6YXRpb25zL29yZzIuZXhhbXBsZS5jb20vdGxzY2EvdGxzY2Eub3JnMi5leGFtcGxlLmNvbS1jZXJ0LnBlbQogICAgICAjIENsaWVudCBrZXkgYW5kIGNlcnQgZm9yIFNTTCBoYW5kc2hha2Ugd2l0aCBGYWJyaWMgQ0EKICAgICAgY2xpZW50OgogICAgICAgIGtleToKICAgICAgICAgIHBhdGg6ICR7R09QQVRIfS9zcmMvZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMtc2FtcGxlcy9maXJzdC1uZXR3b3JrL2NyeXB0by1jb25maWcvcGVlck9yZ2FuaXphdGlvbnMvb3JnMi5leGFtcGxlLmNvbS91c2Vycy9Vc2VyMUBvcmcyLmV4YW1wbGUuY29tL3Rscy9jbGllbnQua2V5CiAgICAgICAgY2VydDoKICAgICAgICAgIHBhdGg6ICR7R09QQVRIfS9zcmMvZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMtc2FtcGxlcy9maXJzdC1uZXR3b3JrL2NyeXB0by1jb25maWcvcGVlck9yZ2FuaXphdGlvbnMvb3JnMi5leGFtcGxlLmNvbS91c2Vycy9Vc2VyMUBvcmcyLmV4YW1wbGUuY29tL3Rscy9jbGllbnQuY3J0CgogICAgICMgRmFicmljLUNBIHN1cHBvcnRzIGR5bmFtaWMgdXNlciBlbnJvbGxtZW50IHZpYSBSRVNUIEFQSXMuIEEgInJvb3QiIHVzZXIsIGEuay5hIHJlZ2lzdHJhciwgaXMKICAgICAjIG5lZWRlZCB0byBlbnJvbGwgYW5kIGludm9rZSBuZXcgdXNlcnMuCiAgICByZWdpc3RyYXI6CiAgICAgIGVucm9sbElkOiBhZG1pbgogICAgICBlbnJvbGxTZWNyZXQ6IGFkbWlucHcKICAgICMgW09wdGlvbmFsXSBUaGUgb3B0aW9uYWwgbmFtZSBvZiB0aGUgQ0EuCiAgICBjYU5hbWU6IGNhLm9yZzIuZXhhbXBsZS5jb20KCiMgRW50aXR5TWF0Y2hlcnMgZW5hYmxlIHN1YnN0aXR1dGlvbiBvZiBuZXR3b3JrIGhvc3RuYW1lcyB3aXRoIHN0YXRpYyBjb25maWd1cmF0aW9ucwogIyBzbyB0aGF0IHByb3BlcnRpZXMgY2FuIGJlIG1hcHBlZC4gUmVnZXggY2FuIGJlIHVzZWQgZm9yIHRoaXMgcHVycG9zZQojIFVybFN1YnN0aXR1dGlvbkV4cCBjYW4gYmUgZW1wdHkgd2hpY2ggbWVhbnMgdGhlIHNhbWUgbmV0d29yayBob3N0bmFtZSB3aWxsIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGdpdmVuIHNhbWUgYXMgbWFwcGVkIHBlZXIgdXJsLCBzbyB0aGF0IG1hcHBlZCBwZWVyIHVybCBjYW4gYmUgdXNlZAojIFVybFN1YnN0aXR1dGlvbkV4cCBjYW4gaGF2ZSBnb2xhbmcgcmVnZXggbWF0Y2hlcnMgbGlrZSAkezF9LmxvY2FsLmV4YW1wbGUuJHsyfTokezN9IGZvciBwYXR0ZXJuCiAjIGxpa2UgcGVlcjAub3JnMS5leGFtcGxlLmNvbToxMjM0IHdoaWNoIGNvbnZlcnRzIHBlZXIwLm9yZzEuZXhhbXBsZS5jb20gdG8gcGVlcjAub3JnMS5sb2NhbC5leGFtcGxlLmNvbToxMjM0CiMgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHAgZm9sbG93IGluIHRoZSBzYW1lIGxpbmVzIGFzCiAjIFN1YnN0aXR1dGlvbkV4cCBmb3IgdGhlIGZpZWxkcyBncHJjT3B0aW9ucy5zc2wtdGFyZ2V0LW5hbWUtb3ZlcnJpZGUgcmVzcGVjdGl2ZWx5CiMgSW4gYW55IGNhc2UgbWFwcGVkSG9zdCdzIGNvbmZpZyB3aWxsIGJlIHVzZWQsIHNvIG1hcHBlZCBob3N0IGNhbm5vdCBiZSBlbXB0eSwgaWYgZW50aXR5TWF0Y2hlcnMgYXJlIHVzZWQKI2VudGl0eU1hdGNoZXJzOgojZW50aXR5TWF0Y2hlcnM6CiMgIHBlZXI6CiMgICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuY29tOihcZCspCiMgICAgICB1cmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMS5leGFtcGxlLmNvbTokezJ9CiMgICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiMgICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiMKIyAgICAtIHBhdHRlcm46IChcdyspLm9yZzIuZXhhbXBsZS5jb206KFxkKykKIyAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcyLmV4YW1wbGUuY29tOiR7Mn0KIyAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KIyAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiMgICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3KykKIyAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbTo3MDUxCiMgICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQojICAgICAgbWFwcGVkSG9zdDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQojCiMgICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKIyAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMi5leGFtcGxlLmNvbTo4MDUxCiMgICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMi5leGFtcGxlLmNvbQojICAgICAgbWFwcGVkSG9zdDogcGVlcjAub3JnMi5leGFtcGxlLmNvbQojCiMgICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlMS4oXHcrKTooXGQrKQojICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiAkezF9Lm9yZzEuZXhhbXBsZS4kezJ9OiR7M30KIyAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiAkezF9Lm9yZzEuZXhhbXBsZS4kezJ9CiMgICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiMKIyAgICAtIHBhdHRlcm46IChcdyspLm9yZzEuZXhhbXBsZS4oXHcrKTooXGQrKQojICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tOjcwNTEKIyAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiMgICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiMKIyAgb3JkZXJlcjoKIyAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKIyAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbTo3MDUwCiMgICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQojICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQojCiMgICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlMi4oXHcrKQojICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAojICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdAojICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQojCiMgICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlMy4oXHcrKQojICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOgojICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6CiMgICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCiMKIyAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGU0LihcdyspOihcZCspCiMgICAgICB1cmxTdWJzdGl0dXRpb25FeHA6ICR7MX0uZXhhbXBsZS4kezJ9OiR7M30KIyAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiAkezF9LmV4YW1wbGUuJHsyfQojICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQojCiMgIGNlcnRpZmljYXRlQXV0aG9yaXR5OgojICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiMgICAgICB1cmxTdWJzdGl0dXRpb25FeHA6CiMgICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2EuZXhhbXBsZS5jb20KIyAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzEuZXhhbXBsZS5jb20KIwojICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspCiMgICAgICB1cmxTdWJzdGl0dXRpb25FeHA6CiMgICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2EuZXhhbXBsZS5jb20KIyAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20KCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIwojICAgIE9wZXJhdGlvbnMgc2VjdGlvbgojICAgIGNvcGllZCBmcm9tIEZhYnJpYydzIGNvcmUueWFtbAojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCm9wZXJhdGlvbnM6CiAgIyBob3N0IGFuZCBwb3J0IGZvciB0aGUgb3BlcmF0aW9ucyBzZXJ2ZXIKICBsaXN0ZW5BZGRyZXNzOiAxMjcuMC4wLjE6ODA4MAoKICAjIFRMUyBjb25maWd1cmF0aW9uIGZvciB0aGUgb3BlcmF0aW9ucyBlbmRwb2ludAogIHRsczoKICAgICMgVExTIGVuYWJsZWQKICAgIGVuYWJsZWQ6IGZhbHNlCgogICAgIyBUT0RPIHJlcGxhY2UgY2VydC5maWxlLCBrZXkuZmlsZSBhbmQgY2xpZW50Um9vdENBcy5maWxlcyB0byB0bHNDQUNlcnRzIGFzIHVzZWQgZWxzZXdoZXJlIGluIHRoaXMgY29uZmlnIGZpbGUKICAgICMgcGF0aCB0byBQRU0gZW5jb2RlZCBzZXJ2ZXIgY2VydGlmaWNhdGUgZm9yIHRoZSBvcGVyYXRpb25zIHNlcnZlcgogICAgY2VydDoKICAgICAgZmlsZToKCiAgICAjIHBhdGggdG8gUEVNIGVuY29kZWQgc2VydmVyIGtleSBmb3IgdGhlIG9wZXJhdGlvbnMgc2VydmVyCiAgICBrZXk6CiAgICAgIGZpbGU6CgogICAgIyByZXF1aXJlIGNsaWVudCBjZXJ0aWZpY2F0ZSBhdXRoZW50aWNhdGlvbiB0byBhY2Nlc3MgYWxsIHJlc291cmNlcwogICAgY2xpZW50QXV0aFJlcXVpcmVkOiBmYWxzZQoKICAgICMgcGF0aHMgdG8gUEVNIGVuY29kZWQgY2EgY2VydGlmaWNhdGVzIHRvIHRydXN0IGZvciBjbGllbnQgYXV0aGVudGljYXRpb24KICAgIGNsaWVudFJvb3RDQXM6CiAgICAgIGZpbGVzOiBbXQoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojCiMgICAgTWV0cmljcyBzZWN0aW9uCiMgICAgY29waWVkIGZyb20gRmFicmljJ3MgY29yZS55YW1sCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKbWV0cmljczoKICAjIG1ldHJpY3MgcHJvdmlkZXIgaXMgb25lIG9mIHN0YXRzZCwgcHJvbWV0aGV1cywgb3IgZGlzYWJsZWQKICBwcm92aWRlcjogcHJvbWV0aGV1cwoKICAjIHN0YXRzZCBjb25maWd1cmF0aW9uCiAgc3RhdHNkOgogICAgIyBuZXR3b3JrIHR5cGU6IHRjcCBvciB1ZHAKICAgIG5ldHdvcms6IHVkcAoKICAgICMgc3RhdHNkIHNlcnZlciBhZGRyZXNzCiAgICBhZGRyZXNzOiAxMjcuMC4wLjE6ODEyNQoKICAgICMgdGhlIGludGVydmFsIGF0IHdoaWNoIGxvY2FsbHkgY2FjaGVkIGNvdW50ZXJzIGFuZCBnYXVnZXMgYXJlIHB1c2hlZAogICAgIyB0byBzdGF0c2Q7IHRpbWluZ3MgYXJlIHB1c2hlZCBpbW1lZGlhdGVseQogICAgd3JpdGVJbnRlcnZhbDogMTBzCgogICAgIyBwcmVmaXggaXMgcHJlcGVuZGVkIHRvIGFsbCBlbWl0dGVkIHN0YXRzZCBtZXRyaWNzCiAgICBwcmVmaXg6Cg=="
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          },
          {
           "name": "orgName",
           "type": "string",
           "required": true,
           "display": {
            "name": "Client organization name",
            "description": "Name of the organization that created the client user",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "org1"
          },
          {
           "name": "userName",
           "type": "string",
           "description": "Name of the client user",
           "required": true,
           "display": {
            "name": "Client user name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "User1"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1554441210000,
         "user": "flogo",
         "connectorName": "local-first-network",
         "connectorDescription": " "
        },
        "requestType": "invoke",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "delete"
         },
         {
          "mapTo": "$INPUT['parameters']['name']",
          "type": "assign",
          "value": "$flow.name"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage19",
      "name": "LogMessage19",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: {\", $activity[FabricRequest6].result.name, \", \", $activity[FabricRequest6].result.color, \", \", $activity[FabricRequest6].result.owner, \"}\")"
         }
        ]
       }
      }
     },
     {
      "id": "Return6",
      "name": "Return6",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest6].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']['color']",
          "type": "assign",
          "value": "$activity[FabricRequest6].result.color"
         },
         {
          "mapTo": "$INPUT['returns']['data']['size']",
          "type": "assign",
          "value": "$activity[FabricRequest6].result.size"
         },
         {
          "mapTo": "$INPUT['returns']['data']['owner']",
          "type": "assign",
          "value": "$activity[FabricRequest6].result.owner"
         },
         {
          "mapTo": "$INPUT['returns']['data']['name']",
          "type": "assign",
          "value": "$activity[FabricRequest6].result.name"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage20",
      "name": "LogMessage20",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest6].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError6",
      "name": "ThrowError6",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest6].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage18",
      "to": "FabricRequest6",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest6",
      "to": "LogMessage19",
      "type": "expression",
      "value": "$activity[FabricRequest6].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage19",
      "to": "Return6",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest6",
      "to": "LogMessage20",
      "type": "expression",
      "value": "$activity[FabricRequest6].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage20",
      "to": "ThrowError6",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "name",
       "type": "string"
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Marble_History",
   "data": {
    "name": "Marble History",
    "description": "Get history of a marble",
    "tasks": [
     {
      "id": "LogMessage21",
      "name": "LogMessage21",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Marble History] \", $flow.name)"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest7",
      "name": "FabricRequest7",
      "activity": {
       "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "6c785450-55a9-11e9-98c5-0fe3500cf4b8",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/yxuco/flogo-enterprise-app/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          },
          {
           "name": "orgName",
           "type": "string",
           "required": true,
           "display": {
            "name": "Client organization name",
            "description": "Name of the organization that created the client user",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "org1"
          },
          {
           "name": "userName",
           "type": "string",
           "description": "Name of the client user",
           "required": true,
           "display": {
            "name": "Client user name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "User1"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1554441210000,
         "user": "flogo",
         "connectorName": "local-first-network",
         "connectorDescription": " "
        },
        "requestType": "query",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "getHistoryForMarble"
         },
         {
          "mapTo": "$INPUT['parameters']['name']",
          "type": "assign",
          "value": "$flow.name"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage22",
      "name": "LogMessage22",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: \", $activity[FabricRequest7].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return7",
      "name": "Return7",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['data']",
          "type": "array",
          "value": "{\"to\":\"$INPUT['returns']['data']\",\"from\":\"$activity[FabricRequest7].result\",\"type\":\"foreach\",\"fields\":[{\"to\":\"$INPUT.$$['txID']\",\"from\":\"$.txID\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['txTime']\",\"from\":\"$.txTime\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['isDeleted']\",\"from\":\"$.isDeleted\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']\",\"from\":\"$.value\",\"type\":\"assign\"}]}"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage23",
      "name": "LogMessage23",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest7].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError7",
      "name": "ThrowError7",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest7].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage21",
      "to": "FabricRequest7",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest7",
      "to": "LogMessage22",
      "type": "expression",
      "value": "$activity[FabricRequest7].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage22",
      "to": "Return7",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest7",
      "to": "LogMessage23",
      "type": "expression",
      "value": "$activity[FabricRequest7].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage23",
      "to": "ThrowError7",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "name",
       "type": "string"
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}"
       }
      }
     ]
    }
   }
  }
 ],
 "triggers": [
  {
   "ref": "github.com/TIBCOSoftware/flogo-contrib/trigger/rest",
   "name": "ReceiveHTTPMessage",
   "description": "Create a marble",
   "settings": {
    "port": 8989
   },
   "id": "ReceiveHTTPMessage",
   "handlers": [
    {
     "description": "Create a marble",
     "settings": {
      "method": "PUT",
      "path": "/marble/create"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Create_Marble"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['content']",
         "type": "assign",
         "value": "$.content"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "fetch marble by name",
     "settings": {
      "method": "GET",
      "path": "/marble/key/:name"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Get_Marble"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['name']",
         "type": "assign",
         "value": "$.pathParams.name"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "query marbles of an owner",
     "settings": {
      "method": "GET",
      "path": "/marble/owner/:owner"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Query_By_Owner"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['owner']",
         "type": "assign",
         "value": "$.pathParams.owner"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "transfer marble to a new owner",
     "settings": {
      "method": "PUT",
      "path": "/marble/transfer"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Transfer_Marble"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['content']",
         "type": "assign",
         "value": "$.content"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "query marbles of key range, [startKey, endKey)",
     "settings": {
      "method": "GET",
      "path": "/marble/range"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Query_By_Range"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['startKey']",
         "type": "assign",
         "value": "$.queryParams.startKey"
        },
        {
         "mapTo": "$INPUT['endKey']",
         "type": "assign",
         "value": "$.queryParams.endKey"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "transfer all marbles of a color",
     "settings": {
      "method": "PUT",
      "path": "/marble/transfercolor"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Transfer_By_Color"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['content']",
         "type": "assign",
         "value": "$.content"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "delete a marble by key",
     "settings": {
      "method": "DELETE",
      "path": "/marble/delete/:name"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Delete_Marble"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['name']",
         "type": "assign",
         "value": "$.pathParams.name"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "Get history of a marble",
     "settings": {
      "method": "GET",
      "path": "/marble/history/:name"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Marble_History"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['name']",
         "type": "assign",
         "value": "$.pathParams.name"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    }
   ]
  }
 ],
 "properties": [
  {
   "name": "MARBLE_CC",
   "type": "string",
   "value": "marble_cc"
  }
 ],
 "ui": "",
 "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS95eHVjby9mbG9nby1lbnRlcnByaXNlLWFwcC9mYWJjbGllbnQiLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vZmFiY2xpZW50In0seyJyZWYiOiJnaXRodWIuY29tL1RJQkNPU29mdHdhcmUvZmxvZ28tY29udHJpYi90cmlnZ2VyL3Jlc3QiLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vRGVmYXVsdC90cmlnZ2VyL3Jlc3QifSx7InJlZiI6ImdpdGh1Yi5jb20vVElCQ09Tb2Z0d2FyZS9mbG9nby1jb250cmliL2FjdGl2aXR5L2xvZyIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9EZWZhdWx0L2FjdGl2aXR5L2xvZyJ9LHsicmVmIjoiZ2l0aHViLmNvbS9USUJDT1NvZnR3YXJlL2Zsb2dvLWNvbnRyaWIvYWN0aXZpdHkvZXJyb3IiLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vRGVmYXVsdC9hY3Rpdml0eS9lcnJvciJ9XQ==",
 "connection": ""
}